// This file is auto-generated. Do not edit manually.
export type FileExplorer = {
  name: string;
  type: "file" | "directory";
  children?: FileExplorer[];
  content?: string;
  language?: string;
}

export const projectStructure: FileExplorer = {
  "name": "project-root",
  "type": "directory",
  "children": [
    {
      "name": "ryoa",
      "type": "directory",
      "children": [
        {
          "name": ".cursorrules",
          "type": "file",
          "content": "# AI Instructions for AuthApp Project\\n\\nThis document provides guidelines for AI assistants working on the AuthApp project. Follow these instructions to maintain consistency and adhere to the project's architecture and best practices.\\n\\n## Project Architecture\\n\\n1. Modular Structure\\n   - The project is organized into modules under `src/modules/`\\n   - Each module (e.g., auth, dashboard) contains its own components, views, and API logic\\n\\n2. No API Routes\\n   - Use Next.js server actions instead of traditional API routes\\n   - Server actions should be placed in `src/modules/[module]/api/mutations/` or `src/modules/[module]/api/queries/`\\n\\n3. Database (Drizzle ORM with SQLite)\\n   - Main schema is defined in `src/server/db/schema/index.ts`\\n   - Module-specific schemas go in `src/modules/[module]/api/schemas/`\\n   - Use Drizzle's migration tools for schema changes\\n\\n4. Authentication\\n   - JWT-based authentication\\n   - Session management using HTTP-only cookies\\n   - Support for email/password and GitHub OAuth\\n\\n## Coding Standards\\n\\n1. Use TypeScript for all new code\\n2. Follow the existing code style and formatting\\n3. Use meaningful variable and function names\\n4. Keep components and functions small and focused\\n5. Use server actions for API functionality instead of API routes\\n6. Implement proper error handling and input validation\\n\\n## File Structure\\n\\noard",
          "language": "plaintext"
        },
        {
          "name": ".gitignore",
          "type": "file",
          "content": "# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.\\n\\n# dependencies\\n/node_modules\\n\\n# next.js\\n/.next/\\n/out/\\n\\n# production\\n/build\\n\\n# debug\\nnpm-debug.log*\\nyarn-debug.log*\\nyarn-error.log*\\n.pnpm-debug.log*\\n\\n# env files\\n.env*\\n\\n# vercel\\n.vercel\\n\\n# typescript\\n*.tsbuildinfo\\nnext-env.d.ts",
          "language": "plaintext"
        },
        {
          "name": ".turbo",
          "type": "directory",
          "children": [
            {
              "name": "turbo-build.log",
              "type": "file",
              "content": "\\n\\n> ryoa@0.1.0 build /home/remcostoeten/PROPAH/ryoa-mono-docs/apps/ryoa\\n> next build\\n\\n \\u001b[33m\\u001b[1m\\u26a0\\u001b[22m\\u001b[39m Invalid next.config.js options detected: \\n \\u001b[33m\\u001b[1m\\u26a0\\u001b[22m\\u001b[39m     Expected object, received boolean at \\\"experimental.serverActions\\\"\\n \\u001b[33m\\u001b[1m\\u26a0\\u001b[22m\\u001b[39m See more info here: https://nextjs.org/docs/messages/invalid-next-config\\n   \\u001b[1m\\u001b[38;2;173;127;168m\\u25b2 Next.js 15.1.6\\u001b[39m\\u001b[22m\\n   - Environments: .env\\n\\n \\u001b[37m\\u001b[1m \\u001b[22m\\u001b[39m Creating an optimized production build ...\\n \\u001b[32m\\u001b[1m\\u2713\\u001b[22m\\u001b[39m Compiled successfully\\n\\u001b[?25l \\u001b[37m\\u001b[1m \\u001b[22m\\u001b[39m Linting and checking validity of types  \\u001b[36m.\\u001b[39m\\u001b[2K\\u001b[1G \\u001b[37m\\u001b[1m \\u001b[22m\\u001b[39m Linting and checking validity of types  \\u001b[36m..\\u001b[39m\\u001b[2K\\u001b[1G \\u001b[37m\\u001b[1m \\u001b[22m\\u001b[39m Linting and checking validity of types  \\u001b[36m...\\u001b[39m\\u001b[2K\\u001b[1G \\u001b[37m\\u001b[1m \\u001b[22m\\u001b[39m Linting and checking validity of types  \\u001b[36m.\\u001b[39m\\u001b[2K\\u001b[1G \\u001b[37m\\u001b[1m \\u001b[22m\\u001b[39m Linting and checking validity of types  \\u001b[36m..\\u001b[39m\\u001b[2K\\u001b[1G \\u001b[37m\\u001b[1m \\u001b[22m\\u001b[39m Linting and checking validity of types  \\u001b[36m...\\u001b[39m\\u001b[2K\\u001b[1G \\u001b[37m\\u001b[1m \\u001b[22m\\u001b[39m Linting and checking validity of types  \\u001b[36m.\\u001b[39m\\u001b[2K\\u001b[1G \\u001b[37m\\u001b[1m \\u001b[22m\\u001b[39m Linting and checking validity of types  \\u001b[36m..\\u001b[39m\\u001b[2K\\u001b[1G \\u001b[37m\\u001b[1m \\u001b[22m\\u001b[39m Linting and checking validity of types  \\u001b[36m...\\u001b[39m\\u001b[2K\\u001b[1G \\u001b[37m\\u001b[1m \\u001b[22m\\u001b[39m Linting and checking validity of types  \\u001b[36m.\\u001b[39m\\u001b[2K\\u001b[1G \\u001b[37m\\u001b[1m \\u001b[22m\\u001b[39m Linting and checking validity of types  \\u001b[36m..\\u001b[39m\\u001b[2K\\u001b[1G \\u001b[37m\\u001b[1m \\u001b[22m\\u001b[39m Linting and checking validity of types  \\u001b[36m...\\u001b[39m\\u001b[2K\\u001b[1G \\u001b[37m\\u001b[1m \\u001b[22m\\u001b[39m Linting and checking validity of types  \\u001b[36m.\\u001b[39m\\u001b[2K\\u001b[1G \\u001b[37m\\u001b[1m \\u001b[22m\\u001b[39m Linting and checking validity of types  \\u001b[36m..\\u001b[39m\\u001b[2K\\u001b[1G \\u001b[37m\\u001b[1m \\u001b[22m\\u001b[39m Linting and checking validity of types  \\u001b[36m...\\u001b[39m\\u001b[2K\\u001b[1G \\u001b[37m\\u001b[1m \\u001b[22m\\u001b[39m Linting and checking validity of types  \\u001b[36m.\\u001b[39m\\u001b[2K\\u001b[1G \\u001b[37m\\u001b[1m \\u001b[22m\\u001b[39m Linting and checking validity of types  \\u001b[36m..\\u001b[39m\\u001b[2K\\u001b[1G \\u001b[37m\\u001b[1m \\u001b[22m\\u001b[39m Linting and checking validity of types  \\u001b[36m...\\u001b[39m\\u001b[2K\\u001b[1G \\u001b[37m\\u001b[1m \\u001b[22m\\u001b[39m Linting and checking validity of types  \\u001b[36m.\\u001b[39m\\u001b[2K\\u001b[1G \\u001b[37m\\u001b[1m \\u001b[22m\\u001b[39m Linting and checking validity of types  \\u001b[36m..\\u001b[39m\\u001b[?25h\\n",
              "language": "plaintext"
            }
          ]
        },
        {
          "name": "README.md",
          "type": "file",
          "content": "# Authentication System Documentation\\n\\n## Table of Contents\\n1. [Current Implementation](#current-implementation)\\n2. [Potential To-Dos](#potential-to-dos)\\n3. [Environment Variables](#environment-variables)\\n4. [How It Works](#how-it-works)\\n\\n## Current Implementation\\n\\n### User Authentication\\n- Email and password registration\\n- Email and password login\\n- GitHub OAuth login\\n- JWT-based session management\\n- Role-based access control (user and admin roles)\\n\\n### Database\\n- SQLite database using Drizzle ORM\\n- Schemas for users, sessions, OAuth connections, and user profiles\\n\\n### User Interface\\n- Login form with email/password and GitHub options\\n- Registration form with email/password and GitHub options\\n- Dashboard for regular users\\n- Admin dashboard with user list\\n\\n### API Routes\\n- GitHub OAuth callback handling\\n- User list retrieval (admin only)\\n\\n### Server-Side Logic\\n- User creation and authentication\\n- Session management\\n- Admin role assignment based on email\\n\\n### Middleware\\n- Authentication check for protected routes\\n- Admin route protection\\n\\n## Potential To-Dos\\n\\n1. Implement password reset functionality\\n2. Add email verification for new registrations\\n3. Implement account deletion\\n4. Add user profile management (view/edit profile)\\n5. Implement refresh token mechanism for prolonged sessions\\n6. Add multi-factor authentication (2FA) option\\n7. Implement rate limiting on authentication endpoints\\n8. Add more OAuth providers (e.g., Google, Facebook)\\n9. Implement user activity logging\\n10. Add account lockout after multiple failed login attempts\\n11. Implement password strength requirements\\n12. Add session management UI (view active sessions, logout from other devices)\\n13. Implement remember me functionality\\n14. Add CSRF protection\\n15. Implement API key generation for users (if needed for external integrations)\\n\\n## Environment Variables\\n\\nAdd the following environment variables to your \\\\`.env\\\\` file:\\n\\n\\\\`\\\\`\\\\`\\nDATABASE_URL=file:./dev.db\\nJWT_SECRET=your_jwt_secret_here\\nGITHUB_CLIENT_ID=your_github_client_id\\nGITHUB_CLIENT_SECRET=your_github_client_secret\\nADMIN_EMAILS=admin1@example.com,admin2@example.com\\n\\\\`\\\\`\\\\`\\n\\n- \\\\`DATABASE_URL\\\\`: The URL for your SQLite database\\n- \\\\`JWT_SECRET\\\\`: A secure random string used for signing JWTs\\n- \\\\`GITHUB_CLIENT_ID\\\\`: Your GitHub OAuth app client ID\\n- \\\\`GITHUB_CLIENT_SECRET\\\\`: Your GitHub OAuth app client secret\\n- \\\\`ADMIN_EMAILS\\\\`: Comma-separated list of email addresses that should be given admin role upon registration\\n\\n## How It Works\\n\\n### Registration Process\\n1. User submits registration form with email and password\\n2. Server validates input and checks if email is in ADMIN_EMAILS\\n3. If email is in ADMIN_EMAILS, user is assigned admin role; otherwise, user role\\n4. Password is hashed using bcrypt\\n5. User data is stored in the database\\n6. A JWT is generated and set as an HTTP-only cookie\\n7. User is redirected to dashboard (or admin dashboard for admins)\\n\\n### Login Process\\n1. User submits login form with email and password\\n2. Server validates credentials\\n3. If valid, a JWT is generated and set as an HTTP-only cookie\\n4. User is redirected to dashboard (or admin dashboard for admins)\\n\\n### GitHub OAuth Flow\\n1. User clicks \\\"Login with GitHub\\\" button\\n2. User is redirected to GitHub for authorization\\n3. GitHub redirects back to our callback URL with a code\\n4. Server exchanges code for access token\\n5. Server fetches user data from GitHub API\\n6. If user doesn't exist, a new user is created\\n7. A JWT is generated and set as an HTTP-only cookie\\n8. User is redirected to dashboard (or admin dashboard for admins)\\n\\n### Session Management\\n- JWTs are used for maintaining user sessions\\n- JWTs are stored as HTTP-only cookies\\n- Middleware checks for valid JWT on protected routes\\n- If JWT is invalid or expired, user is redirected to login\\n\\n### Admin Dashboard\\n- Only accessible to users with admin role\\n- Displays a list of all registered users\\n- Protected by middleware that checks user role\\n\\n### Database Schema\\n- Users: id, email, passwordHash, role, createdAt, updatedAt\\n- Sessions: id, userId, expiresAt, createdAt\\n- OAuthConnections: id, userId, provider, providerUserId, createdAt, updatedAt\\n- UserProfiles: id, userId, fullName, bio, avatarUrl, createdAt, updatedAt\\n\\n### API Routes\\n- \\\\`/api/auth/github\\\\`: Initiates GitHub OAuth flow\\n- \\\\`/api/auth/callback/github\\\\`: Handles GitHub OAuth callback\\n- \\\\`/api/users\\\\`: Returns list of all users (admin only)\\n\\n### Middleware\\n- Checks for presence and validity of JWT\\n- Adds user ID and role to request headers\\n- Redirects unauthenticated users to login page\\n- Prevents authenticated users from accessing login/register pages\\n- Restricts access to admin routes based on user role\\n\\nThis authentication system provides a solid foundation for user management and authentication in a Next.js application. It combines traditional email/password authentication with OAuth support, role-based access control, and secure session management using JWTs.\\n\\n",
          "language": "markdown"
        },
        {
          "name": "components.json",
          "type": "file",
          "content": "{\\n  \\\"$schema\\\": \\\"https://ui.shadcn.com/schema.json\\\",\\n  \\\"style\\\": \\\"default\\\",\\n  \\\"rsc\\\": true,\\n  \\\"tsx\\\": true,\\n  \\\"tailwind\\\": {\\n    \\\"config\\\": \\\"tailwind.config.ts\\\",\\n    \\\"css\\\": \\\"app/globals.css\\\",\\n    \\\"baseColor\\\": \\\"neutral\\\",\\n    \\\"cssVariables\\\": true,\\n    \\\"prefix\\\": \\\"\\\"\\n  },\\n  \\\"aliases\\\": {\\n    \\\"components\\\": \\\"@/components\\\",\\n    \\\"utils\\\": \\\"@/lib/utils\\\",\\n    \\\"ui\\\": \\\"@/components/ui\\\",\\n    \\\"lib\\\": \\\"@/lib\\\",\\n    \\\"hooks\\\": \\\"@/hooks\\\"\\n  },\\n  \\\"iconLibrary\\\": \\\"lucide\\\"\\n}",
          "language": "json"
        },
        {
          "name": "drizzle",
          "type": "directory",
          "children": [
            {
              "name": "0000_flimsy_klaw.sql",
              "type": "file",
              "content": "CREATE TABLE `oauth_connections` (\\n\\t`id` text PRIMARY KEY NOT NULL,\\n\\t`user_id` text NOT NULL,\\n\\t`provider` text NOT NULL,\\n\\t`provider_user_id` text NOT NULL,\\n\\t`access_token` text,\\n\\t`refresh_token` text,\\n\\t`expires_at` integer,\\n\\t`created_at` integer DEFAULT CURRENT_TIMESTAMP NOT NULL\\n);\\n--> statement-breakpoint\\nCREATE TABLE `sessions` (\\n\\t`id` text PRIMARY KEY NOT NULL,\\n\\t`user_id` text NOT NULL,\\n\\t`expires_at` integer NOT NULL,\\n\\t`created_at` integer DEFAULT CURRENT_TIMESTAMP NOT NULL,\\n\\t`user_agent` text,\\n\\t`ip_address` text\\n);\\n--> statement-breakpoint\\nCREATE TABLE `user_profiles` (\\n\\t`id` text PRIMARY KEY NOT NULL,\\n\\t`user_id` text NOT NULL,\\n\\t`full_name` text,\\n\\t`bio` text,\\n\\t`avatar_url` text,\\n\\t`created_at` integer DEFAULT CURRENT_TIMESTAMP NOT NULL,\\n\\t`updated_at` integer DEFAULT CURRENT_TIMESTAMP NOT NULL,\\n\\tFOREIGN KEY (`user_id`) REFERENCES `users`(`id`) ON UPDATE no action ON DELETE no action\\n);\\n--> statement-breakpoint\\nCREATE TABLE `users` (\\n\\t`id` text PRIMARY KEY NOT NULL,\\n\\t`email` text NOT NULL,\\n\\t`password_hash` text,\\n\\t`role` text DEFAULT 'user' NOT NULL,\\n\\t`created_at` integer DEFAULT CURRENT_TIMESTAMP NOT NULL,\\n\\t`updated_at` integer DEFAULT CURRENT_TIMESTAMP NOT NULL\\n);\\n--> statement-breakpoint\\nCREATE UNIQUE INDEX `users_email_unique` ON `users` (`email`);",
              "language": "plaintext"
            },
            {
              "name": "0000_initial.sql",
              "type": "file",
              "content": "CREATE TABLE IF NOT EXISTS users (\\n  id TEXT PRIMARY KEY NOT NULL,\\n  email TEXT NOT NULL,\\n  password_hash TEXT,\\n  role TEXT NOT NULL DEFAULT 'user' CHECK(role IN ('user', 'admin')),\\n  created_at INTEGER NOT NULL DEFAULT CURRENT_TIMESTAMP,\\n  updated_at INTEGER NOT NULL DEFAULT CURRENT_TIMESTAMP\\n);\\n\\nCREATE UNIQUE INDEX IF NOT EXISTS users_email_unique ON users(email);\\n\\nCREATE TABLE IF NOT EXISTS sessions (\\n  id TEXT PRIMARY KEY NOT NULL,\\n  user_id TEXT NOT NULL REFERENCES users(id),\\n  expires_at INTEGER NOT NULL,\\n  created_at INTEGER NOT NULL DEFAULT CURRENT_TIMESTAMP\\n);\\n\\nCREATE TABLE IF NOT EXISTS oauth_connections (\\n  id TEXT PRIMARY KEY NOT NULL,\\n  user_id TEXT NOT NULL REFERENCES users(id),\\n  provider TEXT NOT NULL,\\n  provider_user_id TEXT NOT NULL,\\n  created_at INTEGER NOT NULL DEFAULT CURRENT_TIMESTAMP,\\n  updated_at INTEGER NOT NULL DEFAULT CURRENT_TIMESTAMP\\n);\\n\\nCREATE TABLE IF NOT EXISTS user_profiles (\\n  id TEXT PRIMARY KEY NOT NULL,\\n  user_id TEXT NOT NULL REFERENCES users(id),\\n  full_name TEXT,\\n  bio TEXT,\\n  avatar_url TEXT,\\n  created_at INTEGER NOT NULL DEFAULT CURRENT_TIMESTAMP,\\n  updated_at INTEGER NOT NULL DEFAULT CURRENT_TIMESTAMP\\n); ",
              "language": "plaintext"
            },
            {
              "name": "0001_unknown_marvex.sql",
              "type": "file",
              "content": "DROP INDEX `users_email_unique`;",
              "language": "plaintext"
            },
            {
              "name": "meta",
              "type": "directory",
              "children": [
                {
                  "name": "0000_snapshot.json",
                  "type": "file",
                  "content": "{\\n  \\\"version\\\": \\\"6\\\",\\n  \\\"dialect\\\": \\\"sqlite\\\",\\n  \\\"id\\\": \\\"224da049-05e6-4655-a17c-cb8041cca2e1\\\",\\n  \\\"prevId\\\": \\\"00000000-0000-0000-0000-000000000000\\\",\\n  \\\"tables\\\": {\\n    \\\"oauth_connections\\\": {\\n      \\\"name\\\": \\\"oauth_connections\\\",\\n      \\\"columns\\\": {\\n        \\\"id\\\": {\\n          \\\"name\\\": \\\"id\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"primaryKey\\\": true,\\n          \\\"notNull\\\": true,\\n          \\\"autoincrement\\\": false\\n        },\\n        \\\"user_id\\\": {\\n          \\\"name\\\": \\\"user_id\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": true,\\n          \\\"autoincrement\\\": false\\n        },\\n        \\\"provider\\\": {\\n          \\\"name\\\": \\\"provider\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": true,\\n          \\\"autoincrement\\\": false\\n        },\\n        \\\"provider_user_id\\\": {\\n          \\\"name\\\": \\\"provider_user_id\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": true,\\n          \\\"autoincrement\\\": false\\n        },\\n        \\\"access_token\\\": {\\n          \\\"name\\\": \\\"access_token\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": false,\\n          \\\"autoincrement\\\": false\\n        },\\n        \\\"refresh_token\\\": {\\n          \\\"name\\\": \\\"refresh_token\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": false,\\n          \\\"autoincrement\\\": false\\n        },\\n        \\\"expires_at\\\": {\\n          \\\"name\\\": \\\"expires_at\\\",\\n          \\\"type\\\": \\\"integer\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": false,\\n          \\\"autoincrement\\\": false\\n        },\\n        \\\"created_at\\\": {\\n          \\\"name\\\": \\\"created_at\\\",\\n          \\\"type\\\": \\\"integer\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": true,\\n          \\\"autoincrement\\\": false,\\n          \\\"default\\\": \\\"CURRENT_TIMESTAMP\\\"\\n        }\\n      },\\n      \\\"indexes\\\": {},\\n      \\\"foreignKeys\\\": {},\\n      \\\"compositePrimaryKeys\\\": {},\\n      \\\"uniqueConstraints\\\": {},\\n      \\\"checkConstraints\\\": {}\\n    },\\n    \\\"sessions\\\": {\\n      \\\"name\\\": \\\"sessions\\\",\\n      \\\"columns\\\": {\\n        \\\"id\\\": {\\n          \\\"name\\\": \\\"id\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"primaryKey\\\": true,\\n          \\\"notNull\\\": true,\\n          \\\"autoincrement\\\": false\\n        },\\n        \\\"user_id\\\": {\\n          \\\"name\\\": \\\"user_id\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": true,\\n          \\\"autoincrement\\\": false\\n        },\\n        \\\"expires_at\\\": {\\n          \\\"name\\\": \\\"expires_at\\\",\\n          \\\"type\\\": \\\"integer\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": true,\\n          \\\"autoincrement\\\": false\\n        },\\n        \\\"created_at\\\": {\\n          \\\"name\\\": \\\"created_at\\\",\\n          \\\"type\\\": \\\"integer\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": true,\\n          \\\"autoincrement\\\": false,\\n          \\\"default\\\": \\\"CURRENT_TIMESTAMP\\\"\\n        },\\n        \\\"user_agent\\\": {\\n          \\\"name\\\": \\\"user_agent\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": false,\\n          \\\"autoincrement\\\": false\\n        },\\n        \\\"ip_address\\\": {\\n          \\\"name\\\": \\\"ip_address\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": false,\\n          \\\"autoincrement\\\": false\\n        }\\n      },\\n      \\\"indexes\\\": {},\\n      \\\"foreignKeys\\\": {},\\n      \\\"compositePrimaryKeys\\\": {},\\n      \\\"uniqueConstraints\\\": {},\\n      \\\"checkConstraints\\\": {}\\n    },\\n    \\\"user_profiles\\\": {\\n      \\\"name\\\": \\\"user_profiles\\\",\\n      \\\"columns\\\": {\\n        \\\"id\\\": {\\n          \\\"name\\\": \\\"id\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"primaryKey\\\": true,\\n          \\\"notNull\\\": true,\\n          \\\"autoincrement\\\": false\\n        },\\n        \\\"user_id\\\": {\\n          \\\"name\\\": \\\"user_id\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": true,\\n          \\\"autoincrement\\\": false\\n        },\\n        \\\"full_name\\\": {\\n          \\\"name\\\": \\\"full_name\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": false,\\n          \\\"autoincrement\\\": false\\n        },\\n        \\\"bio\\\": {\\n          \\\"name\\\": \\\"bio\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": false,\\n          \\\"autoincrement\\\": false\\n        },\\n        \\\"avatar_url\\\": {\\n          \\\"name\\\": \\\"avatar_url\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": false,\\n          \\\"autoincrement\\\": false\\n        },\\n        \\\"created_at\\\": {\\n          \\\"name\\\": \\\"created_at\\\",\\n          \\\"type\\\": \\\"integer\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": true,\\n          \\\"autoincrement\\\": false,\\n          \\\"default\\\": \\\"CURRENT_TIMESTAMP\\\"\\n        },\\n        \\\"updated_at\\\": {\\n          \\\"name\\\": \\\"updated_at\\\",\\n          \\\"type\\\": \\\"integer\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": true,\\n          \\\"autoincrement\\\": false,\\n          \\\"default\\\": \\\"CURRENT_TIMESTAMP\\\"\\n        }\\n      },\\n      \\\"indexes\\\": {},\\n      \\\"foreignKeys\\\": {\\n        \\\"user_profiles_user_id_users_id_fk\\\": {\\n          \\\"name\\\": \\\"user_profiles_user_id_users_id_fk\\\",\\n          \\\"tableFrom\\\": \\\"user_profiles\\\",\\n          \\\"tableTo\\\": \\\"users\\\",\\n          \\\"columnsFrom\\\": [\\n            \\\"user_id\\\"\\n          ],\\n          \\\"columnsTo\\\": [\\n            \\\"id\\\"\\n          ],\\n          \\\"onDelete\\\": \\\"no action\\\",\\n          \\\"onUpdate\\\": \\\"no action\\\"\\n        }\\n      },\\n      \\\"compositePrimaryKeys\\\": {},\\n      \\\"uniqueConstraints\\\": {},\\n      \\\"checkConstraints\\\": {}\\n    },\\n    \\\"users\\\": {\\n      \\\"name\\\": \\\"users\\\",\\n      \\\"columns\\\": {\\n        \\\"id\\\": {\\n          \\\"name\\\": \\\"id\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"primaryKey\\\": true,\\n          \\\"notNull\\\": true,\\n          \\\"autoincrement\\\": false\\n        },\\n        \\\"email\\\": {\\n          \\\"name\\\": \\\"email\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": true,\\n          \\\"autoincrement\\\": false\\n        },\\n        \\\"password_hash\\\": {\\n          \\\"name\\\": \\\"password_hash\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": false,\\n          \\\"autoincrement\\\": false\\n        },\\n        \\\"role\\\": {\\n          \\\"name\\\": \\\"role\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": true,\\n          \\\"autoincrement\\\": false,\\n          \\\"default\\\": \\\"'user'\\\"\\n        },\\n        \\\"created_at\\\": {\\n          \\\"name\\\": \\\"created_at\\\",\\n          \\\"type\\\": \\\"integer\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": true,\\n          \\\"autoincrement\\\": false,\\n          \\\"default\\\": \\\"CURRENT_TIMESTAMP\\\"\\n        },\\n        \\\"updated_at\\\": {\\n          \\\"name\\\": \\\"updated_at\\\",\\n          \\\"type\\\": \\\"integer\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": true,\\n          \\\"autoincrement\\\": false,\\n          \\\"default\\\": \\\"CURRENT_TIMESTAMP\\\"\\n        }\\n      },\\n      \\\"indexes\\\": {\\n        \\\"users_email_unique\\\": {\\n          \\\"name\\\": \\\"users_email_unique\\\",\\n          \\\"columns\\\": [\\n            \\\"email\\\"\\n          ],\\n          \\\"isUnique\\\": true\\n        }\\n      },\\n      \\\"foreignKeys\\\": {},\\n      \\\"compositePrimaryKeys\\\": {},\\n      \\\"uniqueConstraints\\\": {},\\n      \\\"checkConstraints\\\": {}\\n    }\\n  },\\n  \\\"views\\\": {},\\n  \\\"enums\\\": {},\\n  \\\"_meta\\\": {\\n    \\\"schemas\\\": {},\\n    \\\"tables\\\": {},\\n    \\\"columns\\\": {}\\n  },\\n  \\\"internal\\\": {\\n    \\\"indexes\\\": {}\\n  }\\n}",
                  "language": "json"
                },
                {
                  "name": "0001_snapshot.json",
                  "type": "file",
                  "content": "{\\n  \\\"version\\\": \\\"6\\\",\\n  \\\"dialect\\\": \\\"sqlite\\\",\\n  \\\"id\\\": \\\"957d1c40-d47e-4eb6-9553-928dbcbe350d\\\",\\n  \\\"prevId\\\": \\\"224da049-05e6-4655-a17c-cb8041cca2e1\\\",\\n  \\\"tables\\\": {\\n    \\\"oauth_connections\\\": {\\n      \\\"name\\\": \\\"oauth_connections\\\",\\n      \\\"columns\\\": {\\n        \\\"id\\\": {\\n          \\\"name\\\": \\\"id\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"primaryKey\\\": true,\\n          \\\"notNull\\\": true,\\n          \\\"autoincrement\\\": false\\n        },\\n        \\\"user_id\\\": {\\n          \\\"name\\\": \\\"user_id\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": true,\\n          \\\"autoincrement\\\": false\\n        },\\n        \\\"provider\\\": {\\n          \\\"name\\\": \\\"provider\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": true,\\n          \\\"autoincrement\\\": false\\n        },\\n        \\\"provider_user_id\\\": {\\n          \\\"name\\\": \\\"provider_user_id\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": true,\\n          \\\"autoincrement\\\": false\\n        },\\n        \\\"access_token\\\": {\\n          \\\"name\\\": \\\"access_token\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": false,\\n          \\\"autoincrement\\\": false\\n        },\\n        \\\"refresh_token\\\": {\\n          \\\"name\\\": \\\"refresh_token\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": false,\\n          \\\"autoincrement\\\": false\\n        },\\n        \\\"expires_at\\\": {\\n          \\\"name\\\": \\\"expires_at\\\",\\n          \\\"type\\\": \\\"integer\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": false,\\n          \\\"autoincrement\\\": false\\n        },\\n        \\\"created_at\\\": {\\n          \\\"name\\\": \\\"created_at\\\",\\n          \\\"type\\\": \\\"integer\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": true,\\n          \\\"autoincrement\\\": false,\\n          \\\"default\\\": \\\"CURRENT_TIMESTAMP\\\"\\n        }\\n      },\\n      \\\"indexes\\\": {},\\n      \\\"foreignKeys\\\": {},\\n      \\\"compositePrimaryKeys\\\": {},\\n      \\\"uniqueConstraints\\\": {},\\n      \\\"checkConstraints\\\": {}\\n    },\\n    \\\"sessions\\\": {\\n      \\\"name\\\": \\\"sessions\\\",\\n      \\\"columns\\\": {\\n        \\\"id\\\": {\\n          \\\"name\\\": \\\"id\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"primaryKey\\\": true,\\n          \\\"notNull\\\": true,\\n          \\\"autoincrement\\\": false\\n        },\\n        \\\"user_id\\\": {\\n          \\\"name\\\": \\\"user_id\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": true,\\n          \\\"autoincrement\\\": false\\n        },\\n        \\\"expires_at\\\": {\\n          \\\"name\\\": \\\"expires_at\\\",\\n          \\\"type\\\": \\\"integer\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": true,\\n          \\\"autoincrement\\\": false\\n        },\\n        \\\"created_at\\\": {\\n          \\\"name\\\": \\\"created_at\\\",\\n          \\\"type\\\": \\\"integer\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": true,\\n          \\\"autoincrement\\\": false,\\n          \\\"default\\\": \\\"CURRENT_TIMESTAMP\\\"\\n        },\\n        \\\"user_agent\\\": {\\n          \\\"name\\\": \\\"user_agent\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": false,\\n          \\\"autoincrement\\\": false\\n        },\\n        \\\"ip_address\\\": {\\n          \\\"name\\\": \\\"ip_address\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": false,\\n          \\\"autoincrement\\\": false\\n        }\\n      },\\n      \\\"indexes\\\": {},\\n      \\\"foreignKeys\\\": {},\\n      \\\"compositePrimaryKeys\\\": {},\\n      \\\"uniqueConstraints\\\": {},\\n      \\\"checkConstraints\\\": {}\\n    },\\n    \\\"user_profiles\\\": {\\n      \\\"name\\\": \\\"user_profiles\\\",\\n      \\\"columns\\\": {\\n        \\\"id\\\": {\\n          \\\"name\\\": \\\"id\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"primaryKey\\\": true,\\n          \\\"notNull\\\": true,\\n          \\\"autoincrement\\\": false\\n        },\\n        \\\"user_id\\\": {\\n          \\\"name\\\": \\\"user_id\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": true,\\n          \\\"autoincrement\\\": false\\n        },\\n        \\\"full_name\\\": {\\n          \\\"name\\\": \\\"full_name\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": false,\\n          \\\"autoincrement\\\": false\\n        },\\n        \\\"bio\\\": {\\n          \\\"name\\\": \\\"bio\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": false,\\n          \\\"autoincrement\\\": false\\n        },\\n        \\\"avatar_url\\\": {\\n          \\\"name\\\": \\\"avatar_url\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": false,\\n          \\\"autoincrement\\\": false\\n        },\\n        \\\"created_at\\\": {\\n          \\\"name\\\": \\\"created_at\\\",\\n          \\\"type\\\": \\\"integer\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": true,\\n          \\\"autoincrement\\\": false,\\n          \\\"default\\\": \\\"CURRENT_TIMESTAMP\\\"\\n        },\\n        \\\"updated_at\\\": {\\n          \\\"name\\\": \\\"updated_at\\\",\\n          \\\"type\\\": \\\"integer\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": true,\\n          \\\"autoincrement\\\": false,\\n          \\\"default\\\": \\\"CURRENT_TIMESTAMP\\\"\\n        }\\n      },\\n      \\\"indexes\\\": {},\\n      \\\"foreignKeys\\\": {\\n        \\\"user_profiles_user_id_users_id_fk\\\": {\\n          \\\"name\\\": \\\"user_profiles_user_id_users_id_fk\\\",\\n          \\\"tableFrom\\\": \\\"user_profiles\\\",\\n          \\\"tableTo\\\": \\\"users\\\",\\n          \\\"columnsFrom\\\": [\\n            \\\"user_id\\\"\\n          ],\\n          \\\"columnsTo\\\": [\\n            \\\"id\\\"\\n          ],\\n          \\\"onDelete\\\": \\\"no action\\\",\\n          \\\"onUpdate\\\": \\\"no action\\\"\\n        }\\n      },\\n      \\\"compositePrimaryKeys\\\": {},\\n      \\\"uniqueConstraints\\\": {},\\n      \\\"checkConstraints\\\": {}\\n    },\\n    \\\"users\\\": {\\n      \\\"name\\\": \\\"users\\\",\\n      \\\"columns\\\": {\\n        \\\"id\\\": {\\n          \\\"name\\\": \\\"id\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"primaryKey\\\": true,\\n          \\\"notNull\\\": true,\\n          \\\"autoincrement\\\": false\\n        },\\n        \\\"email\\\": {\\n          \\\"name\\\": \\\"email\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": true,\\n          \\\"autoincrement\\\": false\\n        },\\n        \\\"password_hash\\\": {\\n          \\\"name\\\": \\\"password_hash\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": false,\\n          \\\"autoincrement\\\": false\\n        },\\n        \\\"role\\\": {\\n          \\\"name\\\": \\\"role\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": true,\\n          \\\"autoincrement\\\": false,\\n          \\\"default\\\": \\\"'user'\\\"\\n        },\\n        \\\"created_at\\\": {\\n          \\\"name\\\": \\\"created_at\\\",\\n          \\\"type\\\": \\\"integer\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": true,\\n          \\\"autoincrement\\\": false,\\n          \\\"default\\\": \\\"CURRENT_TIMESTAMP\\\"\\n        },\\n        \\\"updated_at\\\": {\\n          \\\"name\\\": \\\"updated_at\\\",\\n          \\\"type\\\": \\\"integer\\\",\\n          \\\"primaryKey\\\": false,\\n          \\\"notNull\\\": true,\\n          \\\"autoincrement\\\": false,\\n          \\\"default\\\": \\\"CURRENT_TIMESTAMP\\\"\\n        }\\n      },\\n      \\\"indexes\\\": {},\\n      \\\"foreignKeys\\\": {},\\n      \\\"compositePrimaryKeys\\\": {},\\n      \\\"uniqueConstraints\\\": {},\\n      \\\"checkConstraints\\\": {}\\n    }\\n  },\\n  \\\"views\\\": {},\\n  \\\"enums\\\": {},\\n  \\\"_meta\\\": {\\n    \\\"schemas\\\": {},\\n    \\\"tables\\\": {},\\n    \\\"columns\\\": {}\\n  },\\n  \\\"internal\\\": {\\n    \\\"indexes\\\": {}\\n  }\\n}",
                  "language": "json"
                },
                {
                  "name": "_journal.json",
                  "type": "file",
                  "content": "{\\n  \\\"version\\\": \\\"7\\\",\\n  \\\"dialect\\\": \\\"sqlite\\\",\\n  \\\"entries\\\": [\\n    {\\n      \\\"idx\\\": 0,\\n      \\\"version\\\": \\\"6\\\",\\n      \\\"when\\\": 1739920911320,\\n      \\\"tag\\\": \\\"0000_flimsy_klaw\\\",\\n      \\\"breakpoints\\\": true\\n    },\\n    {\\n      \\\"idx\\\": 1,\\n      \\\"version\\\": \\\"6\\\",\\n      \\\"when\\\": 1739922034962,\\n      \\\"tag\\\": \\\"0001_unknown_marvex\\\",\\n      \\\"breakpoints\\\": true\\n    }\\n  ]\\n}",
                  "language": "json"
                }
              ]
            }
          ]
        },
        {
          "name": "drizzle.config.ts",
          "type": "file",
          "content": "import { defineConfig } from \"drizzle-kit\";\n\nexport default defineConfig({\n  dialect: \"sqlite\",\n  schema: \"./src/modules/auth/api/schemas/*\",\n  out: \"./src/server/db/migrations\",\n  dbCredentials: {\n    url: \"local.db\", \n  }\n});",
          "language": "typescript"
        },
        {
          "name": "lib",
          "type": "directory",
          "children": [
            {
              "name": "utils.ts",
              "type": "file",
              "content": "import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n",
              "language": "typescript"
            }
          ]
        },
        {
          "name": "local.db",
          "type": "file",
          "content": "Binary file not shown",
          "language": "plaintext"
        },
        {
          "name": "next-env.d.ts",
          "type": "file",
          "content": "/// <reference types=\"next\" />\n/// <reference types=\"next/image-types/global\" />\n\n// NOTE: This file should not be edited\n// see https://nextjs.org/docs/app/api-reference/config/typescript for more information.\n",
          "language": "typescript"
        },
        {
          "name": "next.config.js",
          "type": "file",
          "content": "/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  webpack: (config, { isServer }) => {\n    if (!isServer) {\n      // Don't bundle better-sqlite3 on the client side\n      config.resolve.fallback = {\n        ...config.resolve.fallback,\n        \"better-sqlite3\": false,\n        fs: false,\n        path: false,\n        util: false,\n      }\n    }\n    return config\n  },\n  experimental: {\n    serverActions: true,\n  },\n}\n\nmodule.exports = nextConfig ",
          "language": "javascript"
        },
        {
          "name": "next.config.mjs",
          "type": "file",
          "content": "let userConfig = undefined\\ntry {\\n  userConfig = await import('./v0-user-next.config')\\n} catch (e) {\\n  // ignore error\\n}\\n\\n/** @type {import('next').NextConfig} */\\nconst nextConfig = {\\n  eslint: {\\n    ignoreDuringBuilds: true,\\n  },\\n  typescript: {\\n    ignoreBuildErrors: true,\\n  },\\n  images: {\\n    unoptimized: true,\\n  },\\n  experimental: {\\n    webpackBuildWorker: true,\\n    parallelServerBuildTraces: true,\\n    parallelServerCompiles: true,\\n  },\\n}\\n\\nmergeConfig(nextConfig, userConfig)\\n\\nfunction mergeConfig(nextConfig, userConfig) {\\n  if (!userConfig) {\\n    return\\n  }\\n\\n  for (const key in userConfig) {\\n    if (\\n      typeof nextConfig[key] === 'object' &&\\n      !Array.isArray(nextConfig[key])\\n    ) {\\n      nextConfig[key] = {\\n        ...nextConfig[key],\\n        ...userConfig[key],\\n      }\\n    } else {\\n      nextConfig[key] = userConfig[key]\\n    }\\n  }\\n}\\n\\nexport default nextConfig\\n",
          "language": "plaintext"
        },
        {
          "name": "package.json",
          "type": "file",
          "content": "{\\n  \\\"name\\\": \\\"ryoa\\\",\\n  \\\"version\\\": \\\"0.1.0\\\",\\n  \\\"private\\\": true,\\n  \\\"scripts\\\": {\\n    \\\"dev\\\": \\\"next dev\\\",\\n    \\\"build\\\": \\\"next build\\\",\\n    \\\"start\\\": \\\"next start\\\",\\n    \\\"lint\\\": \\\"next lint\\\"\\n  },\\n  \\\"dependencies\\\": {\\n    \\\"@aws-sdk/client-rds-data\\\": \\\"latest\\\",\\n    \\\"@cloudflare/workers-types\\\": \\\"latest\\\",\\n    \\\"@electric-sql/pglite\\\": \\\"latest\\\",\\n    \\\"@hookform/resolvers\\\": \\\"^3.9.1\\\",\\n    \\\"@libsql/client\\\": \\\"^0.14.0\\\",\\n    \\\"@libsql/client-wasm\\\": \\\"latest\\\",\\n    \\\"@neondatabase/serverless\\\": \\\"latest\\\",\\n    \\\"@op-engineering/op-sqlite\\\": \\\"latest\\\",\\n    \\\"@opentelemetry/api\\\": \\\"latest\\\",\\n    \\\"@planetscale/database\\\": \\\"latest\\\",\\n    \\\"@prisma/client\\\": \\\"latest\\\",\\n    \\\"@radix-ui/react-accordion\\\": \\\"^1.2.2\\\",\\n    \\\"@radix-ui/react-alert-dialog\\\": \\\"^1.1.4\\\",\\n    \\\"@radix-ui/react-aspect-ratio\\\": \\\"^1.1.1\\\",\\n    \\\"@radix-ui/react-avatar\\\": \\\"^1.1.2\\\",\\n    \\\"@radix-ui/react-checkbox\\\": \\\"^1.1.3\\\",\\n    \\\"@radix-ui/react-collapsible\\\": \\\"^1.1.2\\\",\\n    \\\"@radix-ui/react-context-menu\\\": \\\"^2.2.4\\\",\\n    \\\"@radix-ui/react-dialog\\\": \\\"^1.1.4\\\",\\n    \\\"@radix-ui/react-dropdown-menu\\\": \\\"^2.1.4\\\",\\n    \\\"@radix-ui/react-hover-card\\\": \\\"^1.1.4\\\",\\n    \\\"@radix-ui/react-label\\\": \\\"^2.1.1\\\",\\n    \\\"@radix-ui/react-menubar\\\": \\\"^1.1.4\\\",\\n    \\\"@radix-ui/react-navigation-menu\\\": \\\"^1.2.3\\\",\\n    \\\"@radix-ui/react-popover\\\": \\\"^1.1.4\\\",\\n    \\\"@radix-ui/react-progress\\\": \\\"^1.1.1\\\",\\n    \\\"@radix-ui/react-radio-group\\\": \\\"^1.2.2\\\",\\n    \\\"@radix-ui/react-scroll-area\\\": \\\"^1.2.2\\\",\\n    \\\"@radix-ui/react-select\\\": \\\"^2.1.4\\\",\\n    \\\"@radix-ui/react-separator\\\": \\\"^1.1.1\\\",\\n    \\\"@radix-ui/react-slider\\\": \\\"^1.2.2\\\",\\n    \\\"@radix-ui/react-slot\\\": \\\"^1.1.1\\\",\\n    \\\"@radix-ui/react-switch\\\": \\\"^1.1.2\\\",\\n    \\\"@radix-ui/react-tabs\\\": \\\"^1.1.2\\\",\\n    \\\"@radix-ui/react-toast\\\": \\\"^1.2.4\\\",\\n    \\\"@radix-ui/react-toggle\\\": \\\"^1.1.1\\\",\\n    \\\"@radix-ui/react-toggle-group\\\": \\\"^1.1.1\\\",\\n    \\\"@radix-ui/react-tooltip\\\": \\\"^1.1.6\\\",\\n    \\\"@t3-oss/env-nextjs\\\": \\\"latest\\\",\\n    \\\"@tidbcloud/serverless\\\": \\\"latest\\\",\\n    \\\"@types/better-sqlite3\\\": \\\"^7.6.12\\\",\\n    \\\"@types/pg\\\": \\\"latest\\\",\\n    \\\"@types/sql.js\\\": \\\"latest\\\",\\n    \\\"@vercel/postgres\\\": \\\"latest\\\",\\n    \\\"@xata.io/client\\\": \\\"latest\\\",\\n    \\\"autoprefixer\\\": \\\"^10.4.20\\\",\\n    \\\"bcryptjs\\\": \\\"latest\\\",\\n    \\\"better-sqlite3\\\": \\\"^11.8.1\\\",\\n    \\\"bun-types\\\": \\\"latest\\\",\\n    \\\"class-variance-authority\\\": \\\"^0.7.1\\\",\\n    \\\"clsx\\\": \\\"^2.1.1\\\",\\n    \\\"cmdk\\\": \\\"1.0.4\\\",\\n    \\\"date-fns\\\": \\\"4.1.0\\\",\\n    \\\"drizzle-orm\\\": \\\"^0.39.3\\\",\\n    \\\"embla-carousel-react\\\": \\\"8.5.1\\\",\\n    \\\"expo-sqlite\\\": \\\"latest\\\",\\n    \\\"input-otp\\\": \\\"1.4.1\\\",\\n    \\\"jose\\\": \\\"latest\\\",\\n    \\\"knex\\\": \\\"latest\\\",\\n    \\\"kysely\\\": \\\"latest\\\",\\n    \\\"lucide-react\\\": \\\"^0.454.0\\\",\\n    \\\"mysql2\\\": \\\"latest\\\",\\n    \\\"nanoid\\\": \\\"latest\\\",\\n    \\\"next\\\": \\\"15.1.6\\\",\\n    \\\"next-themes\\\": \\\"^0.4.4\\\",\\n    \\\"pg\\\": \\\"latest\\\",\\n    \\\"postgres\\\": \\\"latest\\\",\\n    \\\"react\\\": \\\"^18\\\",\\n    \\\"react-beautiful-dnd\\\": \\\"^13.1.1\\\",\\n    \\\"react-day-picker\\\": \\\"8.10.1\\\",\\n    \\\"react-dom\\\": \\\"^18\\\",\\n    \\\"react-hook-form\\\": \\\"^7.54.1\\\",\\n    \\\"react-resizable-panels\\\": \\\"^2.1.7\\\",\\n    \\\"recharts\\\": \\\"2.15.0\\\",\\n    \\\"sonner\\\": \\\"^1.7.1\\\",\\n    \\\"sql.js\\\": \\\"latest\\\",\\n    \\\"sqlite3\\\": \\\"latest\\\",\\n    \\\"tailwind-merge\\\": \\\"^2.5.5\\\",\\n    \\\"tailwindcss-animate\\\": \\\"^1.0.7\\\",\\n    \\\"typescript\\\": \\\"latest\\\",\\n    \\\"valibot\\\": \\\"latest\\\",\\n    \\\"vaul\\\": \\\"^0.9.6\\\",\\n    \\\"zod\\\": \\\"latest\\\"\\n  },\\n  \\\"devDependencies\\\": {\\n    \\\"@types/node\\\": \\\"^22\\\",\\n    \\\"@types/react\\\": \\\"^18\\\",\\n    \\\"@types/react-dom\\\": \\\"^18\\\",\\n    \\\"drizzle-kit\\\": \\\"^0.30.4\\\",\\n    \\\"postcss\\\": \\\"^8\\\",\\n    \\\"tailwindcss\\\": \\\"^3.4.17\\\",\\n    \\\"typescript\\\": \\\"^5\\\"\\n  }\\n}",
          "language": "json"
        },
        {
          "name": "postcss.config.mjs",
          "type": "file",
          "content": "/** @type {import('postcss-load-config').Config} */\\nconst config = {\\n  plugins: {\\n    tailwindcss: {},\\n  },\\n};\\n\\nexport default config;\\n",
          "language": "plaintext"
        },
        {
          "name": "public",
          "type": "directory",
          "children": [
            {
              "name": "placeholder-logo.png",
              "type": "file",
              "content": "\\ufffdPNG\\n\\u001a\\n\\u0000\\u0000\\u0000\\nIHDR\\u0000\\u0000\\u0001\\u0000\\u0000\\u0000\\u0000\\ufffd\\u0004\\u0003\\u0000\\u0000\\u0000\\u0015M\\ufffd\\ufffd\\u0000\\u0000\\u00000PLTE\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000Z?\\u001c\\u000b\\u0000\\u0000\\u0000\\u000ftRNS\\u0000\\ufffd \\ufffd@\\ufffd\\u0010\\ufffd`P0p\\ufffd\\ufffd\\ufffdw\\f\\u0000\\u0000\\u0001\\ufffdIDATx\\ufffd\\ufffd\\u063dJ3Q\\u0010\\u0006\\ufffd7'\\ufffd\\ufffd%\\ufffd|?\\ufffd \\u0016\\ufffd\\u0016\\ufffd\\ufffd\\u0001E\\ufffd\\u0004l\\u0005\\ufffd7\\ufffd\\ufffd\\u0017\\ufffd(X\\ufffdD\\ufffd\\u0004\\ufffd\\ufffd\\ufffd\\ufffd\\ufffdw`\\ufffd\\ufffd\\ufffd\\ufffd[\\ufffd*t\\ufffd\\ufffd\\ufffd\\ufffdD\\ufffd\\ufffd\\ufffdmD\\ufffd\\u0001}\\u001f\\ufffd\\ufffd4;\\f;\\ufffd\\u0017DDDDDDDDDDDD_\\u0013\\ufffd_\\u0130\\ufffd\\u0012\\u0019\\ufffd!\\ufffd\\u0010y\\ufffd`\\ufffd_\\ufffd:\\ufffd\\ufffd\\f;\\u007f\\u013b\\ufffd'|\\ufffd\\t\\f\\ufffd\\ufffd\\u0001;.\\u0014I\\\"\\u0018\\u001a\\u0011\\ufffd\\ufffd\\ufffd\\ufffd3\\u0018*5\\ufffd\\ufffd\\ufffd\\ufffdJ\\ufffd1\\u0002\\ufffd\\ufffd \\ufffdT\\ufffd\\u0002\\u0014\\ufffd\\u0006F\\u0002I\\ufffd\\ufffd\\t\\ufffd\\ufffd=\\ufffd\\ufffd3\\u0703\\u001a\\ufffd2~\\ufffdb\\u0005\\u001d\\ufffd\\ufffd\\ufffd0\\ufffd\\u001c\\ufffdU9\\\\\\ufffd\\ufffd]\\ufffd4\\ufffd#w0\\ufffd\\ufffdGt\\\\&1\\f\\u0014\\ufffd\\u0007?2\\u0005\\u00131,\\u0005\\ufffd\\ufffd\\ufffdo!e\\ufffd\\u000em\\ufffd\\ufffd\\u013bR\\ufffd\\u0016\\ufffd\\ufffd\\ufffd\\ufffd5\\ufffd\\ufffd \\u063dAJ\\ufffd9\\ufffd\\ufffdR\\u001d)\\ufffd5\\ufffd0.FF\\u0010ASa\\b\\u0019\\u01c3\\ufffdT\\ufffd#|\\ufffdK\\ufffd\\ufffd\\ufffdI\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd1\\ufffd\\nM\\ufffd\\ufffd\\ufffd\\ufffd\\u0011\\ufffd\\ufffdN\\\"\\ufffd\\ufffd$\\ufffd\\ufffd\\ufffd\\ufffdG\\ufffdV\\ufffdT\\ufffd\\u000b\\ufffd\\ufffdT^^\\ufffd\\ufffdA\\ufffd$S\\ufffd\\ufffd\\u0015h(\\ufffd\\ufffd\\ufffd\\u001b\\u0017\\ufffd\\ufffd\\ufffd\\ufffdG]co\\\"J\\u05f8^^\\ufffd'\\ufffd=\\u0016\\ufffd\\ufffd\\ufffd%\\ufffd\\t\\f\\ufffdW\\ufffd6\\u042b\\ufffdW\\ufffd\\ufffdw\\ufffda\\ufffd\\u07c7*\\ufffd^^\\ufffd\\u0012YG\\ufffdc\\ufffd\\ufffd\\ufffd`'F\\u0017\\ufffd\\ufffd\\u001d\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd^\\u00005_\\ufffd,\\ufffdS\\ufffd%\\u0000\\u0000\\u0000\\u0000IEND\\ufffdB`\\ufffd",
              "language": "plaintext"
            },
            {
              "name": "placeholder-logo.svg",
              "type": "file",
              "content": "<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"215\\\" height=\\\"48\\\" fill=\\\"none\\\"><path fill=\\\"#000\\\" d=\\\"M57.588 9.6h6L73.828 38h-5.2l-2.36-6.88h-11.36L52.548 38h-5.2l10.24-28.4Zm7.16 17.16-4.16-12.16-4.16 12.16h8.32Zm23.694-2.24c-.186-1.307-.706-2.32-1.56-3.04-.853-.72-1.866-1.08-3.04-1.08-1.68 0-2.986.613-3.92 1.84-.906 1.227-1.36 2.947-1.36 5.16s.454 3.933 1.36 5.16c.934 1.227 2.24 1.84 3.92 1.84 1.254 0 2.307-.373 3.16-1.12.854-.773 1.387-1.867 1.6-3.28l5.12.24c-.186 1.68-.733 3.147-1.64 4.4-.906 1.227-2.08 2.173-3.52 2.84-1.413.667-2.986 1-4.72 1-2.08 0-3.906-.453-5.48-1.36-1.546-.907-2.76-2.2-3.64-3.88-.853-1.68-1.28-3.627-1.28-5.84 0-2.24.427-4.187 1.28-5.84.88-1.68 2.094-2.973 3.64-3.88 1.574-.907 3.4-1.36 5.48-1.36 1.68 0 3.227.32 4.64.96 1.414.64 2.56 1.56 3.44 2.76.907 1.2 1.454 2.6 1.64 4.2l-5.12.28Zm11.486-7.72.12 3.4c.534-1.227 1.307-2.173 2.32-2.84 1.04-.693 2.267-1.04 3.68-1.04 1.494 0 2.76.387 3.8 1.16 1.067.747 1.827 1.813 2.28 3.2.507-1.44 1.294-2.52 2.36-3.24 1.094-.747 2.414-1.12 3.96-1.12 1.414 0 2.64.307 3.68.92s1.84 1.52 2.4 2.72c.56 1.2.84 2.667.84 4.4V38h-4.96V25.92c0-1.813-.293-3.187-.88-4.12-.56-.96-1.413-1.44-2.56-1.44-.906 0-1.68.213-2.32.64-.64.427-1.133 1.053-1.48 1.88-.32.827-.48 1.84-.48 3.04V38h-4.56V25.92c0-1.2-.133-2.213-.4-3.04-.24-.827-.626-1.453-1.16-1.88-.506-.427-1.133-.64-1.88-.64-.906 0-1.68.227-2.32.68-.64.427-1.133 1.053-1.48 1.88-.32.827-.48 1.827-.48 3V38h-4.96V16.8h4.48Zm26.723 10.6c0-2.24.427-4.187 1.28-5.84.854-1.68 2.067-2.973 3.64-3.88 1.574-.907 3.4-1.36 5.48-1.36 1.84 0 3.494.413 4.96 1.24 1.467.827 2.64 2.08 3.52 3.76.88 1.653 1.347 3.693 1.4 6.12v1.32h-15.08c.107 1.813.614 3.227 1.52 4.24.907.987 2.134 1.48 3.68 1.48.987 0 1.88-.253 2.68-.76a4.803 4.803 0 0 0 1.84-2.2l5.08.36c-.64 2.027-1.84 3.64-3.6 4.84-1.733 1.173-3.733 1.76-6 1.76-2.08 0-3.906-.453-5.48-1.36-1.573-.907-2.786-2.2-3.64-3.88-.853-1.68-1.28-3.627-1.28-5.84Zm15.16-2.04c-.213-1.733-.76-3.013-1.64-3.84-.853-.827-1.893-1.24-3.12-1.24-1.44 0-2.6.453-3.48 1.36-.88.88-1.44 2.12-1.68 3.72h9.92ZM163.139 9.6V38h-5.04V9.6h5.04Zm8.322 7.2.24 5.88-.64-.36c.32-2.053 1.094-3.56 2.32-4.52 1.254-.987 2.787-1.48 4.6-1.48 2.32 0 4.107.733 5.36 2.2 1.254 1.44 1.88 3.387 1.88 5.84V38h-4.96V25.92c0-1.253-.12-2.28-.36-3.08-.24-.8-.64-1.413-1.2-1.84-.533-.427-1.253-.64-2.16-.64-1.44 0-2.573.48-3.4 1.44-.8.933-1.2 2.307-1.2 4.12V38h-4.96V16.8h4.48Zm30.003 7.72c-.186-1.307-.706-2.32-1.56-3.04-.853-.72-1.866-1.08-3.04-1.08-1.68 0-2.986.613-3.92 1.84-.906 1.227-1.36 2.947-1.36 5.16s.454 3.933 1.36 5.16c.934 1.227 2.24 1.84 3.92 1.84 1.254 0 2.307-.373 3.16-1.12.854-.773 1.387-1.867 1.6-3.28l5.12.24c-.186 1.68-.733 3.147-1.64 4.4-.906 1.227-2.08 2.173-3.52 2.84-1.413.667-2.986 1-4.72 1-2.08 0-3.906-.453-5.48-1.36-1.546-.907-2.76-2.2-3.64-3.88-.853-1.68-1.28-3.627-1.28-5.84 0-2.24.427-4.187 1.28-5.84.88-1.68 2.094-2.973 3.64-3.88 1.574-.907 3.4-1.36 5.48-1.36 1.68 0 3.227.32 4.64.96 1.414.64 2.56 1.56 3.44 2.76.907 1.2 1.454 2.6 1.64 4.2l-5.12.28Zm11.443 8.16V38h-5.6v-5.32h5.6Z\\\"/><path fill=\\\"#171717\\\" fill-rule=\\\"evenodd\\\" d=\\\"m7.839 40.783 16.03-28.054L20 6 0 40.783h7.839Zm8.214 0H40L27.99 19.894l-4.02 7.032 3.976 6.914H20.02l-3.967 6.943Z\\\" clip-rule=\\\"evenodd\\\"/></svg>",
              "language": "plaintext"
            },
            {
              "name": "placeholder-user.jpg",
              "type": "file",
              "content": "\\ufffd\\ufffd\\ufffd\\ufffd\\u0000\\u0010JFIF\\u0000\\u0001\\u0001\\u0000\\u0000\\u0001\\u0000\\u0001\\u0000\\u0000\\ufffd\\ufffd\\u0000C\\u0000\\n\\u0007\\u0007\\t\\u0007\\u0006\\n\\t\\b\\t\\u000b\\u000b\\n\\f\\u000f\\u0019\\u0010\\u000f\\u000e\\u000e\\u000f\\u001e\\u0016\\u0017\\u0012\\u0019$ &%# #\\\"(-90(*6+\\\"#2D26;=@@@&0FKE>J9?@=\\ufffd\\ufffd\\u0000C\\u0001\\u000b\\u000b\\u000b\\u000f\\n\\u000f\\u001d\\u0010\\u0010\\u001d=)#)==================================================\\ufffd\\ufffd\\u0000\\u0011\\b\\u0000\\ufffd\\u0000\\ufffd\\u0003\\u0001\\u0011\\u0000\\u0002\\u0011\\u0001\\u0003\\u0011\\u0001\\ufffd\\ufffd\\u0000\\u001b\\u0000\\u0001\\u0000\\u0003\\u0001\\u0001\\u0001\\u0001\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0005\\u0006\\u0007\\u0004\\u0001\\u0002\\u0003\\ufffd\\ufffd\\u0000\\u0014\\u0001\\u0001\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\ufffd\\ufffd\\u0000\\f\\u0003\\u0001\\u0000\\u0002\\u0010\\u0003\\u0010\\u0000\\u0000\\u0000\\u0640\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000|\\ufffdr4\\ufffd-\\u0007\\ufffd\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0308\\\"x\\ufffd'\\ufffd0\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0003\\ufffd\\u00cd\\ufffd\\ufffd8\\ufffdH\\ufffdN\\ufffd\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000q\\ufffd\\ufffd\\ufffd\\u001f\\ufffd\\ufffd\\u0018Q\\ufffd\\u001d\\ufffd\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\ufffd\\ufffd\\ufffd\\ufffd\\ufffdV\\ufffd\\u0013`=\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\ufffd($q\\\"_\\ufffd\\ufffd\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u000f\\n\\ufffdS8\\u000f\\u000f\\ufffdP\\ufffd\\ufffd0\\u0000\\u0000\\u0000\\u0000\\u0000\\u001f\\u0006VF\\u0017bP\\ufffd\\ufffd!\\nIo40\\u0000\\u0000\\u0000\\u0000\\u0000\\ufffd\\u0015\\ufffd[?p\\u0000#\\ufffd|\\ufffd\\u000b@\\u0000\\u0000\\u0000\\u0000\\u0003!.E\\ufffd\\u0000\\u00003\\ufffd\\ufffd4p\\u0000\\u0000\\u0000\\u0000\\u0006Bq\\u001d \\u0000\\u0001\\ufffdZ\\n\\u001c\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002s\\u0000\\u0000\\u0000\\u0012\\u0004\\ufffd\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u001f\\ufffd\\ufffd\\u0000C\\u0010\\u0000\\u0001\\u0003\\u0002\\u0001\\u0005\\u000b\\u0007\\t\\t\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0003\\u0004\\u0000\\u0005\\u0006\\u0011AQR\\ufffd\\u0007\\u0012\\u0016\\u0017!1@Ua\\ufffd\\ufffd02Tq\\ufffd\\ufffd\\ufffd\\u0010\\u001456cps\\ufffd\\ufffd \\\"#$PS\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\u0000\\b\\u0001\\u0001\\u0000\\u0001?\\u0000\\ufffd\\ufffdR\\ufffd\\ufffd\\ufffd,\\ufffd\\ufffd\\f\\ufffd\\ufffd\\ufffd\\n\\ufffdn\\ufffdk\\ufffd\\ufffdn8rZ\\ufffd\\ufffd\\ufffd\\u001e\\ufffd\\ufffd9\\u001dVv\\ufffd\\u0000\\ufffdV\\ufffd\\ufffdms\\u0016\\u0011$9\\u0011zW\\u028fh\\ufffd-+@Z\\u0014\\u0014\\ufffd2\\ufffd\\u000ePGE\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\u001c\\ufffdEY\\u0011\\u00199\\u0017\\ufffd\\ufffd\\u0015i\\ufffd\\u03fd\\ufffdS\\t\\ufffd\\ufffdO\\ufffd\\ufffd\\u0214\\ufffd\\u0016\\ufffd_I\\ufffd\\ufffdW\\u9af5\\ufffd}\\ufffd\\ufffd\\ufffd\\ufffd\\ufffdB\\ufffd\\u054eT\\ufffd\\ufffd>%r\\f\\ufffd[e/,W\\ufffdD}\\ufffd\\ufffdD\\ufffd>b\\ufffde>\\ufffdv\\ufffdZ\\ufffdp&\\ufffd*VS\\ufffd\\ufffdV\\ufffdsV\\ufffdc\\u0011\\u0019\\u0000\\u0006\\ufffd\\u0001:\\ufffd\\ufffd~K\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\u0000C\\ufffd\\ufffd:\\ufffd\\ufffdk\\ufffd'A\\u0015n|\\u02b6\\ufffd}\\\\\\uec85\\ufffd\\ufffd\\u000fC\\ufffd \\ufffdf\\ufffd\\ufffd\\ufffd\\ufffda\\ufffd;\\ufffdh\\u001c\\ufffd\\u001d\\u0015\\u001d\\ufffdJ\\ufffd\\ufffd\\ufffd\\u001c\\ufffdq!i=\\ufffd\\ufffd\\ufffd\\\"\\ufffdq\\ufffdNF\\ufffdIZ\\ufffd`\\ufffdw\\u011d5hAj\\ufffd\\t\\n\\ufffdRXl\\u001e\\u4389\\ufffdlk\\ufffd\\ufffd\\ufffd@I\\u0011\\ufffd%l\\ufffd\\ufffd\\u001d\\u0546\\ufffd\\ufffd\\ufffdFDY-\\ufffd\\ufffd\\ufffd\\ufffdEq\\ufffdi\\ufffd\\ufffd\\ufffd\\ufffdO\\ufffdI\\ufffd_\\ufffd2b\\ufffdl\\u01cb\\ufffdYu\\ufffd\\ufffdk\\ufffd\\ufffd\\ufffdAO\\ufffd\\ufffd\\u0010\\ufffd\\ufffd\\u0663\\ufffd\\ufffd\\u072d\\ufffdn\\ufffd\\ufffd\\u001acam\\ufffdjN\\ufffdj\\ufffd\\ufffd\\ufffdVL\\u0007\\ufffd}\\ufffd\\u000b;\\ufffd\\ufffd\\u0001o\\u07866\\ufffd\\ufffd\\u0577s\\ufffd\\ufffd,\\u001b\\ufffd\\ufffd\\ufffd\\u0584\\u001d\\ufffd\\ufffd\\ufffdl\\ufffdi\\ufffd\\ufffd\\ufffd\\ufffd\\bl{I\\ufffdO\\ufffd\\ufffd(!%J $\\f\\ufffd\\ufffd\\ufffdn\\ufffd\\u0006\\u0011-@G\\ufffd\\ufffd\\ufffd\\ufffdn\\ufffd\\ufffd\\u072ei!\\ufffd\\uad01G\\u0011\\ufffd:\\ufffd^\\ufffd\\ufffd\\bn\\ufffdg3l\\ufffdF%\\ufffd\\ufffd\\ufffd\\u00179]\\ufffd\\u0013Pq\\ufffd\\ufffd)\\ufffd:\\ufffd\\ufffd\\ufffd\\u000b@\\u0007\\ufffd*\\u024dm\\u05c5\\ufffdVLY'\\ufffd\\u000es+\\ufffdz\\u000b\\ufffd\\ufffd\\ufffdV\\ufffd\\bm\\u0000\\ufffdJ9\\ufffd\\ufffdS\\ufffd_\\ufffd\\ufffd\\ufffd#\\u0012\\ufffd\\u0011\\ufffd;\\ufffd\\ufffd\\ufffd\\ufffd\\u0019\\ufffd\\u01ca!5\\ufffd#\\ufffdq\\\\\\ufffdM@\\ufffd\\ufffd\\u001b@\\u0019\\ufffd]yz\\u001b\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\u000fA;e\\ufffdk\\ufffd\\ufffd\\u000f@\\ufffd\\u0000s\\ufffd\\u001a^\\u0005\\ufffd\\ufffd\\ufffd\\u0019G\\ufffd\\ufffd\\ufffd\\ufffd\\\\\\ufffd5F\\ufffd\\ufffd(\\ufffd\\u001b\\ufffd\\u0000\\u0011S\\ufffd\\ufffdLy\\ufffd\\ufffd\\ufffd\\u0006c\\ufffdi\\u00078\\ufffd\\u001f\\ufffd\\ufffd\\ufffd\\ufffdo\\ufffd8T\\ufffd\\ufffdi\\ufffdN\\ufffd\\ufffd7D\\ufffd\\u001c\\ufffd\\ufffd\\ufffdt-\\ufffd\\u0000p\\ufffd3`r\\ufffd\\u0000q\\nr\\ufffd;|\\ufffd.\\ufffd\\ufffdb\\u0004TG\\ufffd\\ufffd[i\\u0003 H\\ufffd\\ufffd\\u035a-\\ufffd\\n\\ufffd\\ufffdOj\\u0017\\ufffd\\u0007H\\ufffd\\ufffd\\ufffd\\ufffdM\\ufffd\\u0612FE\\ufffd{\\ufffd3\\u0011X\\u0016\\ufffdn\\ufffd\\ufffd\\u0019\\ufffde\\ufffd\\u0017 \\ufffdR3\\u001f/\\ufffd~\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\n\\ufffd\\ufffd\\u0000a\\ufffd\\u0015\\ufffd\\ufffd\\ufffd!\\ufffdj\\u0012&@^r\\ufffd\\ufffd\\ufffd\\ufffd\\ufffdY\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffdl\\ufffdZ? \\ufffd7\\ub575\\ufffd\\ufffd)ki\\ufffdw\\ufffd\\ufffd\\\\.\\ufffdu\\ufffd\\ufffd\\u0015\\ufffd\\ufffd\\ufffdX\\ufffd\\ufffd\\\\.\\ufffdu\\ufffd\\ufffd\\u0015\\ufffd\\ufffd\\ufffdX\\ufffd\\ufffd\\\\.\\ufffdu\\ufffd\\ufffd\\u0015\\ufffd\\ufffd\\ufffdX\\ufffd\\ufffd\\\\.\\ufffdu\\ufffd\\ufffd\\u0015p\\ufffdM\\ufffd\\ufffd\\u0019\\ufffd\\u0014\\ufffdo(N\\ufffd\\ufffd3\\ufffdVg\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\u0007Z\\ufffds\\ufffd\\ufffd%\\u000e\\ufffd\\\\\\ufffd]q}d\\ufffd\\u007fk\\\\_Y5\\u001f\\ufffd\\ufffd\\u0017\\ufffdMG\\ufffd\\ufffd\\ufffd\\ufffd\\ufffdQ\\ufffd\\ufffdq}d\\ufffd\\u007fk\\\\_Y5\\u001f\\ufffd\\ufffd\\u0017\\ufffdMG\\ufffd\\ufffd\\ufffd\\ufffd\\ufffdQ\\ufffd\\ufffdq}d\\ufffd\\u007fkV|5\\u0002\\ufffd\\ufffd\\ufffd\\u000e\\u00058\\ufffd\\ufffd\\ufffd//\\ufffd\\ufffd\\ufffd\\ufffd\\u0000\\u0014\\u0011\\u0001\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\ufffd\\ufffd\\ufffd\\u0000\\b\\u0001\\u0002\\u0001\\u0001?\\u0000\\u001c\\u007f\\ufffd\\ufffd\\u0000\\u0014\\u0011\\u0001\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\ufffd\\ufffd\\ufffd\\u0000\\b\\u0001\\u0003\\u0001\\u0001?\\u0000\\u001c\\u007f\\ufffd\\ufffd",
              "language": "plaintext"
            },
            {
              "name": "placeholder.jpg",
              "type": "file",
              "content": "\\ufffd\\ufffd\\ufffd\\ufffd\\u0000\\u0010JFIF\\u0000\\u0001\\u0001\\u0000\\u0000H\\u0000H\\u0000\\u0000\\ufffd\\ufffd\\u0000\\ufffdExif\\u0000\\u0000MM\\u0000*\\u0000\\u0000\\u0000\\b\\u0000\\u0005\\u0001\\u0012\\u0000\\u0003\\u0000\\u0000\\u0000\\u0001\\u0000\\u0001\\u0000\\u0000\\u0001\\u001a\\u0000\\u0005\\u0000\\u0000\\u0000\\u0001\\u0000\\u0000\\u0000J\\u0001\\u001b\\u0000\\u0005\\u0000\\u0000\\u0000\\u0001\\u0000\\u0000\\u0000R\\u0001(\\u0000\\u0003\\u0000\\u0000\\u0000\\u0001\\u0000\\u0002\\u0000\\u0000\\ufffdi\\u0000\\u0004\\u0000\\u0000\\u0000\\u0001\\u0000\\u0000\\u0000Z\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000H\\u0000\\u0000\\u0000\\u0001\\u0000\\u0000\\u0000H\\u0000\\u0000\\u0000\\u0001\\u0000\\u0003\\ufffd\\u0001\\u0000\\u0003\\u0000\\u0000\\u0000\\u0001\\u0000\\u0001\\u0000\\u0000\\ufffd\\u0002\\u0000\\u0004\\u0000\\u0000\\u0000\\u0001\\u0000\\u0000\\u0000\\u0001\\ufffd\\u0003\\u0000\\u0004\\u0000\\u0000\\u0000\\u0001\\u0000\\u0000\\u0000\\u0001\\u0000\\u0000\\u0000\\u0000\\ufffd\\ufffd\\u00008Photoshop 3.0\\u00008BIM\\u0004\\u0004\\u0000\\u0000\\u0000\\u0000\\u0000\\u00008BIM\\u0004%\\u0000\\u0000\\u0000\\u0000\\u0000\\u0010\\ufffd\\u001d\\ufffd\\u064f\\u0000\\ufffd\\u0004\\ufffd\\t\\ufffd\\ufffd\\ufffdB~\\ufffd\\ufffd\\u0000\\u0011\\b\\u0000\\u0001\\u0000\\u0001\\u0003\\u0001\\u0011\\u0000\\u0002\\u0011\\u0001\\u0003\\u0011\\u0001\\ufffd\\ufffd\\u0000\\u001f\\u0000\\u0000\\u0001\\u0005\\u0001\\u0001\\u0001\\u0001\\u0001\\u0001\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0003\\u0002\\u0004\\u0001\\u0005\\u0000\\u0006\\u0007\\b\\t\\n\\u000b\\ufffd\\ufffd\\u0000\\ufffd\\u0010\\u0000\\u0001\\u0003\\u0003\\u0002\\u0004\\u0003\\u0004\\u0006\\u0004\\u0007\\u0006\\u0004\\b\\u0006s\\u0001\\u0002\\u0000\\u0003\\u0011\\u0004\\u0012!\\u00051\\u0013\\\"\\u0010\\u0006AQ2\\u0014aq#\\u0007\\ufffd \\ufffdB\\u0015\\ufffdR3\\ufffd$b0\\u0016\\ufffdr\\ufffdC\\ufffd4\\ufffd\\b\\ufffdS@%c\\u00175\\ufffds\\ufffdPD\\ufffd\\ufffd\\ufffd&T6d\\ufffdt\\ufffd`\\u0484\\ufffd\\u0018p\\ufffd'E7e\\ufffdUu\\ufffd\\ufffd\\u00c5\\ufffd\\ufffdFv\\ufffd\\ufffdGVf\\ufffd\\t\\n\\u0019\\u001a()*89:HIJWXYZghijwxyz\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\u0000\\u001f\\u0001\\u0000\\u0003\\u0001\\u0001\\u0001\\u0001\\u0001\\u0001\\u0001\\u0001\\u0001\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\ufffd\\ufffd\\u0000\\ufffd\\u0011\\u0000\\u0002\\u0002\\u0001\\u0003\\u0003\\u0003\\u0002\\u0003\\u0005\\u0002\\u0005\\u0002\\u0004\\u0004\\ufffd\\u0001\\u0000\\u0002\\u0011\\u0003\\u0010\\u0012!\\u0004 1A\\u0013\\u00050\\\"2Q\\u0014@\\u00063#aB\\u0015qR4\\ufffdP$\\ufffd\\ufffdC\\ufffd\\u0016\\u0007b5S\\ufffd\\ufffd%`\\ufffdD\\ufffdr\\ufffd\\u0017\\ufffdc6p&ET\\ufffd'\\ufffd\\ufffd\\b\\t\\n\\u0018\\u0019\\u001a()*789:FGHIJUVWXYZdefghijstuvwxyz\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\u0000C\\u0000\\u000b\\b\\b\\n\\b\\u0007\\u000b\\n\\t\\n\\n\\f\\u000b\\n\\u0011\\u001c\\u0012\\u0011\\u000f\\u000f\\u0011\\\"\\u0019\\u001a\\u0014\\u001c)$+*($''-2@7-0=0''8L9=CEHIH+6OUNFT@GHE\\ufffd\\ufffd\\u0000C\\u0001\\f\\n\\n\\u0011\\u000f\\u0011!\\u0012\\u0012!E.'.EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE\\ufffd\\ufffd\\u0000\\f\\u0003\\u0001\\u0000\\u0002\\u0011\\u0003\\u0011\\u0000\\u0000\\u0001\\ufffdk\\ufffd\\ufffd\\u0000\\b\\u0001\\u0001\\u0000\\u0001\\u0005\\u0002\\u007f\\ufffd\\ufffd\\u0000\\b\\u0001\\u0003\\u0011\\u0001?\\u0001\\u007f\\ufffd\\ufffd\\u0000\\b\\u0001\\u0002\\u0011\\u0001?\\u0001\\u007f\\ufffd\\ufffd\\u0000\\b\\u0001\\u0001\\u0000\\u0006?\\u0002\\u007f\\ufffd\\ufffd\\u00003\\u0010\\u0001\\u0000\\u0003\\u0000\\u0002\\u0002\\u0002\\u0002\\u0002\\u0003\\u0001\\u0001\\u0000\\u0000\\u0002\\u000b\\u0001\\u0011\\u0000!1AQaq\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\u0010\\ufffd\\ufffd 0@P`p\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\u0000\\b\\u0001\\u0001\\u0000\\u0001?!\\ufffd\\ufffd\\ufffd\\u0000\\f\\u0003\\u0001\\u0000\\u0002\\u0011\\u0003\\u0011\\u0000\\u0000\\u0010\\u001f\\ufffd\\ufffd\\u00003\\u0011\\u0001\\u0001\\u0001\\u0000\\u0003\\u0000\\u0001\\u0002\\u0005\\u0005\\u0001\\u0001\\u0000\\u0001\\u0001\\t\\u0001\\u0000\\u0011!1\\u0010AQa q\\ud804\\udc61\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd0@P`p\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\u0000\\b\\u0001\\u0003\\u0011\\u0001?\\u0010\\ufffd\\ufffd\\ufffd\\u0000\\b\\u0001\\u0002\\u0011\\u0001?\\u0010\\ufffd\\ufffd\\ufffd\\u0000\\b\\u0001\\u0001\\u0000\\u0001?\\u0010\\ufffd\\ufffd\\ufffd",
              "language": "plaintext"
            },
            {
              "name": "placeholder.svg",
              "type": "file",
              "content": "<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"1200\\\" height=\\\"1200\\\" fill=\\\"none\\\"><rect width=\\\"1200\\\" height=\\\"1200\\\" fill=\\\"#EAEAEA\\\" rx=\\\"3\\\"/><g opacity=\\\".5\\\"><g opacity=\\\".5\\\"><path fill=\\\"#FAFAFA\\\" d=\\\"M600.709 736.5c-75.454 0-136.621-61.167-136.621-136.62 0-75.454 61.167-136.621 136.621-136.621 75.453 0 136.62 61.167 136.62 136.621 0 75.453-61.167 136.62-136.62 136.62Z\\\"/><path stroke=\\\"#C9C9C9\\\" stroke-width=\\\"2.418\\\" d=\\\"M600.709 736.5c-75.454 0-136.621-61.167-136.621-136.62 0-75.454 61.167-136.621 136.621-136.621 75.453 0 136.62 61.167 136.62 136.621 0 75.453-61.167 136.62-136.62 136.62Z\\\"/></g><path stroke=\\\"url(#a)\\\" stroke-width=\\\"2.418\\\" d=\\\"M0-1.209h553.581\\\" transform=\\\"scale(1 -1) rotate(45 1163.11 91.165)\\\"/><path stroke=\\\"url(#b)\\\" stroke-width=\\\"2.418\\\" d=\\\"M404.846 598.671h391.726\\\"/><path stroke=\\\"url(#c)\\\" stroke-width=\\\"2.418\\\" d=\\\"M599.5 795.742V404.017\\\"/><path stroke=\\\"url(#d)\\\" stroke-width=\\\"2.418\\\" d=\\\"m795.717 796.597-391.441-391.44\\\"/><path fill=\\\"#fff\\\" d=\\\"M600.709 656.704c-31.384 0-56.825-25.441-56.825-56.824 0-31.384 25.441-56.825 56.825-56.825 31.383 0 56.824 25.441 56.824 56.825 0 31.383-25.441 56.824-56.824 56.824Z\\\"/><g clip-path=\\\"url(#e)\\\"><path fill=\\\"#666\\\" fill-rule=\\\"evenodd\\\" d=\\\"M616.426 586.58h-31.434v16.176l3.553-3.554.531-.531h9.068l.074-.074 8.463-8.463h2.565l7.18 7.181V586.58Zm-15.715 14.654 3.698 3.699 1.283 1.282-2.565 2.565-1.282-1.283-5.2-5.199h-6.066l-5.514 5.514-.073.073v2.876a2.418 2.418 0 0 0 2.418 2.418h26.598a2.418 2.418 0 0 0 2.418-2.418v-8.317l-8.463-8.463-7.181 7.181-.071.072Zm-19.347 5.442v4.085a6.045 6.045 0 0 0 6.046 6.045h26.598a6.044 6.044 0 0 0 6.045-6.045v-7.108l1.356-1.355-1.282-1.283-.074-.073v-17.989h-38.689v23.43l-.146.146.146.147Z\\\" clip-rule=\\\"evenodd\\\"/></g><path stroke=\\\"#C9C9C9\\\" stroke-width=\\\"2.418\\\" d=\\\"M600.709 656.704c-31.384 0-56.825-25.441-56.825-56.824 0-31.384 25.441-56.825 56.825-56.825 31.383 0 56.824 25.441 56.824 56.825 0 31.383-25.441 56.824-56.824 56.824Z\\\"/></g><defs><linearGradient id=\\\"a\\\" x1=\\\"554.061\\\" x2=\\\"-.48\\\" y1=\\\".083\\\" y2=\\\".087\\\" gradientUnits=\\\"userSpaceOnUse\\\"><stop stop-color=\\\"#C9C9C9\\\" stop-opacity=\\\"0\\\"/><stop offset=\\\".208\\\" stop-color=\\\"#C9C9C9\\\"/><stop offset=\\\".792\\\" stop-color=\\\"#C9C9C9\\\"/><stop offset=\\\"1\\\" stop-color=\\\"#C9C9C9\\\" stop-opacity=\\\"0\\\"/></linearGradient><linearGradient id=\\\"b\\\" x1=\\\"796.912\\\" x2=\\\"404.507\\\" y1=\\\"599.963\\\" y2=\\\"599.965\\\" gradientUnits=\\\"userSpaceOnUse\\\"><stop stop-color=\\\"#C9C9C9\\\" stop-opacity=\\\"0\\\"/><stop offset=\\\".208\\\" stop-color=\\\"#C9C9C9\\\"/><stop offset=\\\".792\\\" stop-color=\\\"#C9C9C9\\\"/><stop offset=\\\"1\\\" stop-color=\\\"#C9C9C9\\\" stop-opacity=\\\"0\\\"/></linearGradient><linearGradient id=\\\"c\\\" x1=\\\"600.792\\\" x2=\\\"600.794\\\" y1=\\\"403.677\\\" y2=\\\"796.082\\\" gradientUnits=\\\"userSpaceOnUse\\\"><stop stop-color=\\\"#C9C9C9\\\" stop-opacity=\\\"0\\\"/><stop offset=\\\".208\\\" stop-color=\\\"#C9C9C9\\\"/><stop offset=\\\".792\\\" stop-color=\\\"#C9C9C9\\\"/><stop offset=\\\"1\\\" stop-color=\\\"#C9C9C9\\\" stop-opacity=\\\"0\\\"/></linearGradient><linearGradient id=\\\"d\\\" x1=\\\"404.85\\\" x2=\\\"796.972\\\" y1=\\\"403.903\\\" y2=\\\"796.02\\\" gradientUnits=\\\"userSpaceOnUse\\\"><stop stop-color=\\\"#C9C9C9\\\" stop-opacity=\\\"0\\\"/><stop offset=\\\".208\\\" stop-color=\\\"#C9C9C9\\\"/><stop offset=\\\".792\\\" stop-color=\\\"#C9C9C9\\\"/><stop offset=\\\"1\\\" stop-color=\\\"#C9C9C9\\\" stop-opacity=\\\"0\\\"/></linearGradient><clipPath id=\\\"e\\\"><path fill=\\\"#fff\\\" d=\\\"M581.364 580.535h38.689v38.689h-38.689z\\\"/></clipPath></defs></svg>",
              "language": "plaintext"
            }
          ]
        },
        {
          "name": "src",
          "type": "directory",
          "children": [
            {
              "name": "app",
              "type": "directory",
              "children": [
                {
                  "name": "(auth)",
                  "type": "directory",
                  "children": [
                    {
                      "name": "login",
                      "type": "directory",
                      "children": [
                        {
                          "name": "page.tsx",
                          "type": "file",
                          "content": "import type { Metadata } from \"next\"\nimport { LoginView } from \"../../modules/auth/views/login-view\"\nimport { Navigation } from \"../../components/navigation\"\n\nexport const metadata: Metadata = {\n  title: \"Login\",\n  description: \"Log in to your account\",\n}\n\nexport default function LoginPage() {\n  return (\n    <>\n      <Navigation />\n      <LoginView />\n    </>\n  )\n}\n\n",
                          "language": "typescript"
                        }
                      ]
                    },
                    {
                      "name": "register",
                      "type": "directory",
                      "children": [
                        {
                          "name": "page.tsx",
                          "type": "file",
                          "content": "import type { Metadata } from \"next\"\nimport { RegisterView } from \"../../modules/auth/views/register-view\"\nimport { Navigation } from \"../../components/navigation\"\n\nexport const metadata: Metadata = {\n  title: \"Register\",\n  description: \"Create a new account\",\n}\n\nexport default function RegisterPage() {\n  return (\n    <>\n      <Navigation />\n      <RegisterView />\n    </>\n  )\n}\n\n",
                          "language": "typescript"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "api",
                  "type": "directory",
                  "children": [
                    {
                      "name": "auth",
                      "type": "directory",
                      "children": [
                        {
                          "name": "logout",
                          "type": "directory",
                          "children": [
                            {
                              "name": "route.ts",
                              "type": "file",
                              "content": "import { NextResponse } from \"next/server\"\nimport { cookies } from \"next/headers\"\n\nexport async function POST() {\n  (await cookies()).delete(\"auth_token\")\n  return NextResponse.json({ success: true })\n} ",
                              "language": "typescript"
                            }
                          ]
                        },
                        {
                          "name": "status",
                          "type": "directory",
                          "children": [
                            {
                              "name": "route.ts",
                              "type": "file",
                              "content": "import { NextResponse } from \"next/server\"\nimport { cookies } from \"next/headers\"\nimport { verifyToken } from \"../../../../modules/auth/utils/jwt\"\n\nexport async function GET() {\n  const cookieStore = cookies()\n  const token = cookieStore.get(\"auth_token\")\n\n  if (!token) {\n    return NextResponse.json({ isLoggedIn: false })\n  }\n\n  try {\n    await verifyToken(token.value)\n    return NextResponse.json({ isLoggedIn: true })\n  } catch (error) {\n    return NextResponse.json({ isLoggedIn: false })\n  }\n}\n\n",
                              "language": "typescript"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "users",
                      "type": "directory",
                      "children": [
                        {
                          "name": "route.ts",
                          "type": "file",
                          "content": "\nimport { NextRequest, NextResponse } from \"next/server\"\nimport { db } from \"../../../server/db\"\nimport { users } from \"../../../modules/auth/api/schemas/user\"\nimport { verifyToken } from \"../../../modules/auth/utils/jwt\"\n\nexport async function GET(request: NextRequest) {\n  const token = request.cookies.get(\"auth_token\")?.value\n\n  if (!token) {\n    return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 })\n  }\n\n  try {\n    const payload = await verifyToken(token)\n\n    if (!payload || payload.role !== \"admin\") {\n      return NextResponse.json({ error: \"Forbidden\" }, { status: 403 })\n    }\n\n    const allUsers = await db\n      .select({\n        id: users.id,\n        email: users.email,\n        role: users.role,\n      })\n      .from(users)\n\n    return NextResponse.json(allUsers)\n  } catch (error) {\n    return NextResponse.json(\n      { error: \"Internal Server Error\" },\n      { status: 500 }\n    )\n  }\n}\n\n",
                          "language": "typescript"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "dashboard",
                  "type": "directory",
                  "children": [
                    {
                      "name": "admin",
                      "type": "directory",
                      "children": [
                        {
                          "name": "page.tsx",
                          "type": "file",
                          "content": "import type { Metadata } from \"next\"\nimport { AdminDashboardView } from \"../../../modules/dashboard/views/admin-dashboard-view\"\nimport { Navigation } from \"../../../components/navigation\"\n\nexport const metadata: Metadata = {\n  title: \"Admin Dashboard\",\n  description: \"Admin dashboard to manage users\",\n}\n\nexport default function AdminDashboardPage() {\n  return (\n    <>\n      <Navigation />\n      <AdminDashboardView />\n    </>\n  )\n}\n\n",
                          "language": "typescript"
                        }
                      ]
                    },
                    {
                      "name": "layout.tsx",
                      "type": "file",
                      "content": "import type { ReactNode } from \"react\"\n\nexport default function DashboardLayout({ children }: { children: ReactNode }) {\n  return <div>{children}</div>\n}\n\n",
                      "language": "typescript"
                    },
                    {
                      "name": "page.tsx",
                      "type": "file",
                      "content": "import type { Metadata } from \"next\"\nimport { DashboardView } from \"@/src/views/dashboard\"\nimport { Navigation } from \"../../components/navigation\"\n\nexport const metadata: Metadata = {\n  title: \"Dashboard\",\n  description: \"Your personal dashboard\",\n}\n\nexport default function DashboardPage() {\n  return (\n    <>\n      <Navigation />\n      <DashboardView />\n    </>\n  )\n}\n\n",
                      "language": "typescript"
                    }
                  ]
                },
                {
                  "name": "layout.tsx",
                  "type": "file",
                  "content": "import type { Metadata } from 'next'\nimport '../styles/globals.css'\nimport { cookies } from \"next/headers\"\nimport { verifyToken } from \"../modules/auth/utils/jwt\"\nimport { AuthProvider } from \"../modules/auth/components/auth-provider\"\nimport { AuthGuard } from \"../modules/auth/components/auth-guard\"\n\nexport const metadata: Metadata = {\n  title: 'v0 App',\n  description: 'Created with v0',\n  generator: 'v0.dev',\n}\n\nexport default async function RootLayout({\n  children,\n}: {\n  children: React.ReactNode\n}) {\n  const token = (await cookies()).get(\"auth_token\")\n  let user = null\n\n  if (token) {\n    try {\n      const payload = await verifyToken(token.value)\n      if (payload) {\n        user = {\n          id: payload.userId,\n          email: payload.email,\n          role: payload.role,\n        }\n      }\n    } catch (error) {\n      console.error(\"Token verification failed:\", error)\n    }\n  }\n\n  return (\n    <html lang=\"en\">\n      <body>\n        <AuthProvider initialUser={user}>\n          <AuthGuard>{children}</AuthGuard>\n        </AuthProvider>\n      </body>\n    </html>\n  )\n}\n",
                  "language": "typescript"
                },
                {
                  "name": "page.tsx",
                  "type": "file",
                  "content": "import type { Metadata } from \"next\"\nimport Link from \"next/link\"\nimport { Navigation } from \"../components/navigation\"\n\nexport const metadata: Metadata = {\n  title: \"Welcome to AuthApp\",\n  description: \"A secure authentication system built with Next.js\",\n}\n\nexport default function LandingPage() {\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Navigation />\n      <main className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n        <div className=\"px-4 py-6 sm:px-0\">\n          <div className=\"text-center\">\n            <h1 className=\"text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-6xl\">\n              <span className=\"block xl:inline\">Welcome to </span>\n              <span className=\"block text-indigo-600 xl:inline\">AuthApp</span>\n            </h1>\n            <p className=\"mt-3 max-w-md mx-auto text-base text-gray-500 sm:text-lg md:mt-5 md:text-xl md:max-w-3xl\">\n              A secure authentication system built with Next.js, featuring email/password and GitHub OAuth login.\n            </p>\n            <div className=\"mt-5 max-w-md mx-auto sm:flex sm:justify-center md:mt-8\">\n              <div className=\"rounded-md shadow\">\n                <Link\n                  href=\"/register\"\n                  className=\"w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 md:py-4 md:text-lg md:px-10\"\n                >\n                  Get started\n                </Link>\n              </div>\n              <div className=\"mt-3 rounded-md shadow sm:mt-0 sm:ml-3\">\n                <Link\n                  href=\"/login\"\n                  className=\"w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-indigo-600 bg-white hover:bg-gray-50 md:py-4 md:text-lg md:px-10\"\n                >\n                  Log in\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  )\n}\n\n",
                  "language": "typescript"
                }
              ]
            },
            {
              "name": "components",
              "type": "directory",
              "children": [
                {
                  "name": "navigation.tsx",
                  "type": "file",
                  "content": "\"use client\"\n\nimport Link from \"next/link\"\nimport { usePathname } from \"next/navigation\"\nimport { useAuthStore } from \"@/src/modules/auth/state/use-auth-store\"\nimport { LogoutButton } from \"@/src/modules/auth/components/logout-button\"\n\nexport function Navigation() {\n  const pathname = usePathname()\n  const { isAuthenticated, user } = useAuthStore()\n\n  return (\n    <nav className=\"bg-white shadow\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between h-16\">\n          <div className=\"flex\">\n            <div className=\"flex-shrink-0 flex items-center\">\n              <Link href=\"/\" className=\"text-xl font-bold text-indigo-600\">\n                AuthApp\n              </Link>\n            </div>\n            <div className=\"hidden sm:ml-6 sm:flex sm:space-x-8\">\n              <Link\n                href=\"/\"\n                className={`inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium ${\n                  pathname === \"/\"\n                    ? \"border-indigo-500 text-gray-900\"\n                    : \"border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700\"\n                }`}\n              >\n                Home\n              </Link>\n              {isAuthenticated && (\n                <Link\n                  href=\"/dashboard\"\n                  className={`inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium ${\n                    pathname === \"/dashboard\"\n                      ? \"border-indigo-500 text-gray-900\"\n                      : \"border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700\"\n                  }`}\n                >\n                  Dashboard\n                </Link>\n              )}\n            </div>\n          </div>\n          <div className=\"hidden sm:ml-6 sm:flex sm:items-center\">\n            {isAuthenticated ? (\n              <div className=\"flex items-center space-x-4\">\n                <span className=\"text-sm text-gray-700\">\n                  {user?.email} ({user?.role})\n                </span>\n                <LogoutButton />\n              </div>\n            ) : (\n              <div className=\"flex items-center space-x-4\">\n                <Link\n                  href=\"/login\"\n                  className={`text-sm font-medium ${\n                    pathname === \"/login\"\n                      ? \"text-indigo-600\"\n                      : \"text-gray-500 hover:text-gray-700\"\n                  }`}\n                >\n                  Log in\n                </Link>\n                <Link\n                  href=\"/register\"\n                  className={`text-sm font-medium ${\n                    pathname === \"/register\"\n                      ? \"text-indigo-600\"\n                      : \"text-gray-500 hover:text-gray-700\"\n                  }`}\n                >\n                  Register\n                </Link>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\n",
                  "language": "typescript"
                }
              ]
            },
            {
              "name": "middleware.ts",
              "type": "file",
              "content": "import { type NextRequest, NextResponse } from \"next/server\"\nimport { verifyToken } from \"./modules/auth/utils/jwt\"\nexport async function middleware(request: NextRequest) {\n  const token = request.cookies.get(\"auth_token\")?.value\n\n  if (request.nextUrl.pathname === \"/login\" || request.nextUrl.pathname === \"/register\") {\n    if (token) {\n      const payload = await verifyToken(token)\n      if (payload) {\n        return NextResponse.redirect(new URL(\"/dashboard\", request.url))\n      }\n    }\n    return NextResponse.next()\n  }\n\n  if (!token) {\n    return NextResponse.redirect(new URL(\"/login\", request.url))\n  }\n\n  const payload = await verifyToken(token)\n\n  if (!payload) {\n    return NextResponse.redirect(new URL(\"/login\", request.url))\n  }\n\n  // Add the user ID and role to the request headers\n  const requestHeaders = new Headers(request.headers)\n  requestHeaders.set(\"X-User-ID\", payload.userId)\n  requestHeaders.set(\"X-User-Role\", payload.role)\n\n  // Check for admin routes\n  if (request.nextUrl.pathname.startsWith(\"/dashboard/admin\")) {\n    if (payload.role !== \"admin\") {\n      return NextResponse.redirect(new URL(\"/dashboard\", request.url))\n    }\n  }\n\n  return NextResponse.next({\n    request: {\n      headers: requestHeaders,\n    },\n  })\n}\n\nexport const config = {\n  matcher: [\"/login\", \"/register\", \"/dashboard/:path*\"],\n}\n\n",
              "language": "typescript"
            },
            {
              "name": "modules",
              "type": "directory",
              "children": [
                {
                  "name": "auth",
                  "type": "directory",
                  "children": [
                    {
                      "name": "api",
                      "type": "directory",
                      "children": [
                        {
                          "name": "models",
                          "type": "directory",
                          "children": [
                            {
                              "name": "auth.z.ts",
                              "type": "file",
                              "content": "import { z } from \"zod\"\n\nexport const createUserSchema = z.object({\n  email: z.string().email(\"Invalid email address\"),\n  password: z.string().min(8, \"Password must be at least 8 characters\"),\n})\n\nexport const loginSchema = z.object({\n  email: z.string().email(),\n  password: z.string(),\n})\n\nexport type CreateUserInput = z.infer<typeof createUserSchema>\nexport type LoginInput = z.infer<typeof loginSchema>\n\n",
                              "language": "typescript"
                            },
                            {
                              "name": "oauth-connection.z.ts",
                              "type": "file",
                              "content": "import { z } from \"zod\"\n\nexport const oauthConnectionSchema = z.object({\n  id: z.string(),\n  userId: z.string(),\n  provider: z.string(),\n  providerUserId: z.string(),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n})\n\nexport type OAuthConnection = z.infer<typeof oauthConnectionSchema>\n\n",
                              "language": "typescript"
                            },
                            {
                              "name": "session.z.ts",
                              "type": "file",
                              "content": "import { z } from \"zod\"\n\nexport const sessionSchema = z.object({\n  id: z.string(),\n  userId: z.string(),\n  expiresAt: z.date(),\n  createdAt: z.date(),\n})\n\nexport type Session = z.infer<typeof sessionSchema>\n\n",
                              "language": "typescript"
                            },
                            {
                              "name": "user-profile.z.ts",
                              "type": "file",
                              "content": "import { z } from \"zod\"\n\nexport const userProfileSchema = z.object({\n  id: z.string(),\n  userId: z.string(),\n  fullName: z.string().optional(),\n  bio: z.string().optional(),\n  avatarUrl: z.string().url().optional(),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n})\n\nexport const updateUserProfileSchema = userProfileSchema\n  .partial()\n  .omit({ id: true, userId: true, createdAt: true, updatedAt: true })\n\nexport type UserProfile = z.infer<typeof userProfileSchema>\nexport type UpdateUserProfile = z.infer<typeof updateUserProfileSchema>\n\n",
                              "language": "typescript"
                            },
                            {
                              "name": "user.z.ts",
                              "type": "file",
                              "content": "import { z } from \"zod\"\n\nexport const userSchema = z.object({\n  id: z.string(),\n  email: z.string().email(),\n  role: z.enum([\"user\", \"admin\"]).default(\"user\"),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n})\n\nexport const createUserSchema = userSchema.omit({ id: true, createdAt: true, updatedAt: true }).extend({\n  password: z.string().min(8),\n})\n\nexport const loginSchema = z.object({\n  email: z.string().email(),\n  password: z.string(),\n})\n\nexport type User = z.infer<typeof userSchema>\nexport type CreateUser = z.infer<typeof createUserSchema>\nexport type LoginCredentials = z.infer<typeof loginSchema>\n\n",
                              "language": "typescript"
                            }
                          ]
                        },
                        {
                          "name": "mutations",
                          "type": "directory",
                          "children": [
                            {
                              "name": "create-oauth-connection.ts",
                              "type": "file",
                              "content": "import { db } from \"../../../../server/db\"\nimport { oauthConnections } from \"../schemas/oauth-connection\"\nimport { oauthConnectionSchema } from \"../models/oauth-connection.z\"\nimport { nanoid } from \"nanoid\"\nimport { eq } from \"drizzle-orm\"\n\nexport async function createOAuthConnection(userId: string, provider: string, providerUserId: string) {\n  const id = nanoid()\n\n  await db.insert(oauthConnections).values({ id, userId, provider, providerUserId })\n\n  const createdConnection = await db.select().from(oauthConnections).where(eq(oauthConnections.id, id)).get()\n  return oauthConnectionSchema.parse(createdConnection)\n}\n\n",
                              "language": "typescript"
                            },
                            {
                              "name": "create-session.ts",
                              "type": "file",
                              "content": "import { db } from \"../../../../server/db\"\nimport { sessions } from \"../schemas/session\"\nimport { nanoid } from \"nanoid\"\nimport { generateToken } from \"../../utils/jwt\"\n\nexport async function createSession(userId: string) {\n  const id = nanoid()\n  const token = await generateToken({ userId, sessionId: id })\n  const expiresAt = new Date(Date.now() + 7 * 24 * 60 * 60 * 1000) // 7 days\n\n  await db.insert(sessions).values({ id, userId, expiresAt })\n\n  return { token, expiresAt }\n}\n\n",
                              "language": "typescript"
                            },
                            {
                              "name": "create-user.ts",
                              "type": "file",
                              "content": "\"use server\"\n\nimport { db } from \"../../../../server/db\"\nimport { nanoid } from \"nanoid\"\nimport bcrypt from \"bcryptjs\"\nimport { eq } from \"drizzle-orm\"\nimport { cookies } from \"next/headers\"\nimport { createUserSchema, userSchema } from \"../models/user.z\"\nimport { env } from \"@/src/server/env\"\nimport { users } from \"../schemas/user\"\nimport { ZodError } from \"zod\"\n\nexport async function createUserAction(data: {\n  email: string\n  password: string\n}) {\n  try {\n    const input = createUserSchema.parse(data)\n    const { email, password, role = \"user\" } = input\n    const id = nanoid()\n    const passwordHash = await bcrypt.hash(password, 10)\n    const now = new Date()\n\n    // Check if user already exists\n    const existingUser = await db.select().from(users).where(eq(users.email, email)).get()\n    if (existingUser) {\n      return {\n        success: false,\n        error: \"Email already registered\",\n      }\n    }\n\n    const isAdminEmail = env.ADMIN_EMAILS?.split(\",\").includes(email)\n    const finalRole = isAdminEmail ? \"admin\" : role\n\n    const result = await db.insert(users).values({\n      id,\n      email,\n      passwordHash,\n      role: finalRole,\n      createdAt: now,\n      updatedAt: now,\n    })\n\n    if (!result) {\n      throw new Error(\"Failed to create user\")\n    }\n\n    const createdUser = await db.select().from(users).where(eq(users.id, id)).get()\n    if (!createdUser) {\n      throw new Error(\"Failed to retrieve created user\")\n    }\n\n    const parsedUser = userSchema.parse({\n      ...createdUser,\n      createdAt: new Date(createdUser.createdAt),\n      updatedAt: new Date(createdUser.updatedAt),\n    })\n\n    const token = nanoid()\n    const expiresAt = new Date(Date.now() + 30 * 24 * 60 * 60 * 1000)\n\n    cookies().set(\"auth_token\", token, {\n      expires: expiresAt,\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n      sameSite: \"lax\",\n      path: \"/\",\n    })\n\n    return {\n      success: true,\n      user: { ...parsedUser, role: finalRole },\n      redirect: finalRole === \"admin\" ? \"/dashboard/admin\" : \"/dashboard\",\n    }\n  } catch (error) {\n    console.error(\"Registration error details:\", error)\n    \n    if (error instanceof ZodError) {\n      return {\n        success: false,\n        error: error.errors[0].message,\n      }\n    }\n\n    return {\n      success: false,\n      error: error instanceof Error ? error.message : \"An unexpected error occurred during registration.\",\n    }\n  }\n}\n\n\n\n// import { db } from \"../../../../server/db\"\n// import { users } from \"../schemas/user\"\n// import { createUserSchema, userSchema } from \"../models/user.z\"\n// import { nanoid } from \"nanoid\"\n// import bcrypt from \"bcryptjs\"\n// import { env } from \"../../../../server/env\"\n// import { eq } from \"drizzle-orm\"\n\n// export async function createUser(rawInput: unknown) {\n//   const input = createUserSchema.parse(rawInput)\n//   const { email, password, role = \"user\" } = input\n//   const id = nanoid()\n//   const passwordHash = await bcrypt.hash(password, 10)\n\n//   // Check if the email is an admin email and set role accordingly\n//   const isAdminEmail = env.ADMIN_EMAILS?.split(\",\").includes(email)\n//   const finalRole = isAdminEmail ? \"admin\" : role\n\n//   await db.insert(users).values({ id, email, passwordHash, role: finalRole })\n\n//   const createdUser = await db.select().from(users).where(eq(users.id, id)).get()\n//   const parsedUser = userSchema.parse(createdUser)\n//   return { ...parsedUser, role: finalRole }\n// }\n\n",
                              "language": "typescript"
                            },
                            {
                              "name": "delete-session.ts",
                              "type": "file",
                              "content": "import { db } from \"../../../../server/db\"\nimport { sessions } from \"../schemas/session\"\nimport { eq } from \"drizzle-orm\"\n\nexport async function deleteSession(id: string) {\n  await db.delete(sessions).where(eq(sessions.id, id))\n}\n\n",
                              "language": "typescript"
                            },
                            {
                              "name": "login-with-email-password.ts",
                              "type": "file",
                              "content": "\"use server\"\n\nimport { db } from \"../../../../server/db\"\nimport { users } from \"../schemas/user\"\nimport { eq } from \"drizzle-orm\"\nimport bcrypt from \"bcryptjs\"\nimport { cookies } from \"next/headers\"\nimport { nanoid } from \"nanoid\"\n\nexport async function loginWithEmailPassword(data: { email: string; password: string }) {\n  try {\n    const user = await db.select().from(users).where(eq(users.email, data.email)).get()\n\n    if (!user || !user.passwordHash) {\n      return {\n        success: false,\n        error: \"Invalid email or password\",\n      }\n    }\n\n    const isValid = await bcrypt.compare(data.password, user.passwordHash)\n    if (!isValid) {\n      return {\n        success: false,\n        error: \"Invalid email or password\",\n      }\n    }\n\n    const token = nanoid()\n    const expiresAt = new Date(Date.now() + 30 * 24 * 60 * 60 * 1000)\n\n    cookies().set(\"auth_token\", token, {\n      expires: expiresAt,\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n      sameSite: \"lax\",\n      path: \"/\",\n    })\n\n    return {\n      success: true,\n      user: {\n        id: user.id,\n        email: user.email,\n        role: user.role,\n      },\n      redirect: user.role === \"admin\" ? \"/dashboard/admin\" : \"/dashboard\",\n    }\n  } catch (error) {\n    console.error(\"Login error:\", error)\n    return {\n      success: false,\n      error: \"An unexpected error occurred\",\n    }\n  }\n}\n\n",
                              "language": "typescript"
                            },
                            {
                              "name": "login-with-oauth.ts",
                              "type": "file",
                              "content": "import { getUserByEmail } from \"../queries/get-user-by-email\"\nimport { createUser } from \"./create-user\"\nimport { createSession } from \"./create-session\"\nimport { createOAuthConnection } from \"./create-oauth-connection\"\nimport { nanoid } from \"nanoid\"\n\nexport async function loginWithOAuth(profile: { email: string; id: string; name?: string }) {\n  let user = await getUserByEmail(profile.email)\n\n  if (!user) {\n    // Create a new user if they don't exist\n    user = await createUser({\n      email: profile.email,\n      password: nanoid(), // Generate a random password for OAuth users\n    })\n  }\n\n  // Create or update OAuth connection\n  await createOAuthConnection(user.id, \"github\", profile.id)\n\n  // Create a new session\n  const { token, expiresAt } = await createSession(user.id)\n\n  return { user, token, expiresAt }\n}\n\n",
                              "language": "typescript"
                            },
                            {
                              "name": "logout.ts",
                              "type": "file",
                              "content": "\"use server\"\n\nimport { cookies } from \"next/headers\"\nimport { redirect } from \"next/navigation\"\n\nexport async function logout() {\n  cookies().delete(\"auth_token\")\n  redirect(\"/login\")\n}\n\n",
                              "language": "typescript"
                            },
                            {
                              "name": "update-user-profile.ts",
                              "type": "file",
                              "content": "import { db } from \"../../../../server/db\"\nimport { userProfiles } from \"../schemas/user-profile\"\nimport { eq } from \"drizzle-orm\"\nimport { type updateUserProfileSchema, userProfileSchema } from \"../models/user-profile.z\"\n\nexport async function updateUserProfile(userId: string, input: updateUserProfileSchema) {\n  await db.update(userProfiles).set(input).where(eq(userProfiles.userId, userId))\n\n  const updatedProfile = await db.select().from(userProfiles).where(eq(userProfiles.userId, userId)).get()\n  return userProfileSchema.parse(updatedProfile)\n}\n\n",
                              "language": "typescript"
                            }
                          ]
                        },
                        {
                          "name": "queries",
                          "type": "directory",
                          "children": [
                            {
                              "name": "get-session-by-id.ts",
                              "type": "file",
                              "content": "import { db } from \"../../../../server/db\"\nimport { sessions } from \"../schemas/session\"\nimport { eq } from \"drizzle-orm\"\nimport { sessionSchema } from \"../models/session.z\"\n\nexport async function getSessionById(id: string) {\n  const result = db.select().from(sessions).where(eq(sessions.id, id)).get()\n  return result ? sessionSchema.parse(result) : null\n}\n\n",
                              "language": "typescript"
                            },
                            {
                              "name": "get-user-by-email.ts",
                              "type": "file",
                              "content": "import { db } from \"../../../../server/db\"\nimport { users } from \"../schemas/user\"\nimport { eq } from \"drizzle-orm\"\nimport { userSchema } from \"../models/user.z\"\n\nexport async function getUserByEmail(email: string) {\n  const result = db.select().from(users).where(eq(users.email, email)).get()\n  return result ? userSchema.parse(result) : null\n}\n\n",
                              "language": "typescript"
                            },
                            {
                              "name": "get-user-by-id.ts",
                              "type": "file",
                              "content": "import { db } from \"../../../../server/db\"\nimport { users } from \"../schemas/user\"\nimport { eq } from \"drizzle-orm\"\nimport { userSchema } from \"../models/user.z\"\n\nexport async function getUserById(id: string) {\n  const result = await db.select().from(users).where(eq(users.id, id)).get()\n  return result ? userSchema.parse(result) : null\n}\n\n",
                              "language": "typescript"
                            },
                            {
                              "name": "get-user-profile.ts",
                              "type": "file",
                              "content": "import { db } from \"../../../../server/db\"\nimport { userProfiles } from \"../schemas/user-profile\"\nimport { eq } from \"drizzle-orm\"\nimport { userProfileSchema } from \"../models/user-profile.z\"\n\nexport async function getUserProfile(userId: string) {\n  const result = await db.select().from(userProfiles).where(eq(userProfiles.userId, userId)).get()\n  return result ? userProfileSchema.parse(result) : null\n}\n\n",
                              "language": "typescript"
                            }
                          ]
                        },
                        {
                          "name": "schemas",
                          "type": "directory",
                          "children": [
                            {
                              "name": "oauth-connection.ts",
                              "type": "file",
                              "content": "import { sqliteTable, text, integer } from \"drizzle-orm/sqlite-core\"\nimport { relations, sql } from \"drizzle-orm\"\nimport { users } from \"./user\"\n\nexport const oauthConnections = sqliteTable(\"oauth_connections\", {\n  id: text(\"id\").primaryKey(),\n  userId: text(\"user_id\")\n    .notNull()\n    .references(() => users.id),\n  provider: text(\"provider\").notNull(),\n  providerUserId: text(\"provider_user_id\").notNull(),\n  createdAt: integer(\"created_at\", { mode: \"timestamp\" }).notNull().default(sql`CURRENT_TIMESTAMP`),\n  updatedAt: integer(\"updated_at\", { mode: \"timestamp\" }).notNull().default(sql`CURRENT_TIMESTAMP`),\n})\n\nexport const oauthConnectionsRelations = relations(oauthConnections, ({ one }) => ({\n  user: one(users, { fields: [oauthConnections.userId], references: [users.id] }),\n}))\n\n",
                              "language": "typescript"
                            },
                            {
                              "name": "oauthConnection.ts",
                              "type": "file",
                              "content": "import { sqliteTable, text, integer } from \"drizzle-orm/sqlite-core\"\nimport { sql } from \"drizzle-orm\"\nimport { relations } from \"drizzle-orm\"\nimport { users } from \"./user\"\n\nexport const oauthConnections = sqliteTable(\"oauth_connections\", {\n  id: text(\"id\").primaryKey(),\n  userId: text(\"user_id\").notNull(),\n  provider: text(\"provider\").notNull(), // e.g., 'github', 'google'\n  providerUserId: text(\"provider_user_id\").notNull(),\n  accessToken: text(\"access_token\"),\n  refreshToken: text(\"refresh_token\"),\n  expiresAt: integer(\"expires_at\"),\n  createdAt: integer(\"created_at\").notNull().default(sql`CURRENT_TIMESTAMP`),\n})\n\nexport const oauthConnectionsRelations = relations(oauthConnections, ({ one }) => ({\n  user: one(users, {\n    fields: [oauthConnections.userId],\n    references: [users.id],\n  }),\n})) ",
                              "language": "typescript"
                            },
                            {
                              "name": "session.ts",
                              "type": "file",
                              "content": "import { sqliteTable, text, integer } from \"drizzle-orm/sqlite-core\"\nimport { sql } from \"drizzle-orm\"\nimport { relations } from \"drizzle-orm\"\nimport { users } from \"./user\"\n\nexport const sessions = sqliteTable(\"sessions\", {\n  id: text(\"id\").primaryKey(),\n  userId: text(\"user_id\").notNull(),\n  expiresAt: integer(\"expires_at\").notNull(),\n  createdAt: integer(\"created_at\").notNull().default(sql`CURRENT_TIMESTAMP`),\n  userAgent: text(\"user_agent\"),\n  ipAddress: text(\"ip_address\"),\n})\n\nexport const sessionsRelations = relations(sessions, ({ one }) => ({\n  user: one(users, {\n    fields: [sessions.userId],\n    references: [users.id],\n  }),\n}))\n\n",
                              "language": "typescript"
                            },
                            {
                              "name": "user-profile.ts",
                              "type": "file",
                              "content": "import { sqliteTable, text, integer   } from \"drizzle-orm/sqlite-core\"\nimport { relations, sql } from \"drizzle-orm\"\nimport { users } from \"./user\"\n\nexport const userProfiles = sqliteTable(\"user_profiles\", {\n  id: text(\"id\").primaryKey(),\n  userId: text(\"user_id\")\n    .notNull()\n    .references(() => users.id),\n  fullName: text(\"full_name\"),\n  bio: text(\"bio\"),\n  avatarUrl: text(\"avatar_url\"),\n  createdAt: integer(\"created_at\", { mode: \"timestamp\" }).notNull().default(sql`CURRENT_TIMESTAMP`),\n  updatedAt: integer(\"updated_at\", { mode: \"timestamp\" }).notNull().default(sql`CURRENT_TIMESTAMP`),\n})\n\nexport const userProfilesRelations = relations(userProfiles, ({ one }) => ({\n  user: one(users, { fields: [userProfiles.userId], references: [users.id] }),\n}))\n\n",
                              "language": "typescript"
                            },
                            {
                              "name": "user.ts",
                              "type": "file",
                              "content": "import { sql } from \"drizzle-orm\"\nimport { sqliteTable, text, integer } from \"drizzle-orm/sqlite-core\"\nimport { relations } from \"drizzle-orm\"\nimport { sessions } from \"./session\"\nimport { oauthConnections } from \"./oauthConnection\"\nimport { userProfiles } from \"./user-profile\"\n\nexport const users = sqliteTable(\"users\", {\n  id: text(\"id\").primaryKey(),\n  email: text(\"email\").notNull(),\n  passwordHash: text(\"password_hash\"),\n  role: text(\"role\", { enum: [\"user\", \"admin\"] }).notNull().default(\"user\"),\n  createdAt: integer(\"created_at\", { mode: \"timestamp\" }).notNull().default(sql`CURRENT_TIMESTAMP`),\n  updatedAt: integer(\"updated_at\", { mode: \"timestamp\" }).notNull().default(sql`CURRENT_TIMESTAMP`),\n})\n\nexport const usersRelations = relations(users, ({ one, many }) => ({\n  profile: one(userProfiles, { fields: [users.id], references: [userProfiles.userId] }),\n  sessions: many(sessions),\n  oauthConnections: many(oauthConnections),\n}))\n\n",
                              "language": "typescript"
                            },
                            {
                              "name": "userProfile.ts",
                              "type": "file",
                              "content": " ",
                              "language": "typescript"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "components",
                      "type": "directory",
                      "children": [
                        {
                          "name": "auth-guard.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport { useEffect } from \"react\"\nimport { useRouter, usePathname } from \"next/navigation\"\nimport { useAuthStore } from \"../state/use-auth-store\"\n\nconst PUBLIC_ROUTES = [\"/login\", \"/register\", \"/\"]\nconst PROTECTED_ROUTES = [\"/dashboard\", \"/dashboard/admin\", \"/profile\"]\n\nexport function AuthGuard({ children }: { children: React.ReactNode }) {\n  const router = useRouter()\n  const pathname = usePathname()\n  const { isAuthenticated, user, isLoading } = useAuthStore()\n\n  useEffect(() => {\n    // Debug logging\n    console.log({\n      isLoading,\n      isAuthenticated,\n      pathname,\n      userRole: user?.role,\n    })\n\n    if (isLoading) return // Wait for auth state to be determined\n\n    const isProtectedRoute = PROTECTED_ROUTES.some(route => pathname.startsWith(route))\n\n    if (isAuthenticated && PUBLIC_ROUTES.includes(pathname)) {\n      // Redirect authenticated users away from public pages\n      console.log(\"Redirecting authenticated user from public route to dashboard\")\n      router.push(user?.role === \"admin\" ? \"/dashboard/admin\" : \"/dashboard\")\n    } else if (!isAuthenticated && isProtectedRoute) {\n      // Only redirect unauthenticated users from protected routes\n      console.log(\"Redirecting unauthenticated user from protected route to login\")\n      router.push(\"/login\")\n    }\n  }, [isAuthenticated, pathname, router, user?.role, isLoading])\n\n  // Show nothing while loading to prevent flash of wrong content\n  if (isLoading) {\n    return null\n  }\n\n  return <>{children}</>\n} ",
                          "language": "typescript"
                        },
                        {
                          "name": "auth-provider.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport { useEffect } from \"react\"\nimport { useAuthStore } from \"../state/use-auth-store\"\nimport type { AuthStore } from \"../state/use-auth-store\"\n\ntype User = {\n  id: string\n  email: string\n  role: \"user\" | \"admin\"\n}\n\nexport function AuthProvider({\n  children,\n  initialUser,\n}: {\n  children: React.ReactNode\n  initialUser: User | null\n}) {\n  const setUser = useAuthStore((state: AuthStore) => state.setUser)\n\n  useEffect(() => {\n    if (initialUser) {\n      setUser(initialUser)\n    }\n  }, [initialUser, setUser])\n\n  return <>{children}</>\n} ",
                          "language": "typescript"
                        },
                        {
                          "name": "github-button.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nexport function GitHubButton() {\n  return (\n    <button\n      onClick={() => {\n        window.location.href = \"/api/auth/github/login\"\n      }}\n      className=\"flex items-center justify-center gap-2 rounded-lg border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50\"\n    >\n      <svg className=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n        <path\n          fillRule=\"evenodd\"\n          d=\"M10 0C4.477 0 0 4.484 0 10.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0110 4.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.203 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.942.359.31.678.921.678 1.856 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0020 10.017C20 4.484 15.522 0 10 0z\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n      Continue with GitHub\n    </button>\n  )\n} ",
                          "language": "typescript"
                        },
                        {
                          "name": "login-form.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport { useState } from \"react\"\nimport { useRouter } from \"next/navigation\"\nimport { loginWithEmailPassword } from \"../api/mutations/login-with-email-password\"\nimport { useAuthStore } from \"../state/use-auth-store\"\n\nexport function LoginForm() {\n  const router = useRouter()\n  const [error, setError] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n  const setUser = useAuthStore((state) => state.setUser)\n\n  async function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault()\n    setError(\"\")\n    setLoading(true)\n\n    const formData = new FormData(event.currentTarget)\n    const email = formData.get(\"email\") as string\n    const password = formData.get(\"password\") as string\n\n    try {\n      const result = await loginWithEmailPassword({ email, password })\n      \n      if (!result.success) {\n        setError(result.error || \"Login failed\")\n        return\n      }\n\n      setUser(result.user)\n      router.push(result.redirect || \"/dashboard\")\n    } catch (error) {\n      setError(\"An unexpected error occurred\")\n      console.error(error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\n      {error && (\n        <div className=\"bg-red-50 text-red-500 p-3 rounded-lg text-sm\">\n          {error}\n        </div>\n      )}\n      <div>\n        <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n          Email\n        </label>\n        <input\n          type=\"email\"\n          name=\"email\"\n          id=\"email\"\n          required\n          className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n        />\n      </div>\n      <div>\n        <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n          Password\n        </label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          id=\"password\"\n          required\n          className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n        />\n      </div>\n      <button\n        type=\"submit\"\n        disabled={loading}\n        className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n      >\n        {loading ? \"Logging in...\" : \"Log in\"}\n      </button>\n    </form>\n  )\n}\n\n",
                          "language": "typescript"
                        },
                        {
                          "name": "logout-button.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport { useRouter } from \"next/navigation\"\nimport { useAuthStore } from \"../state/use-auth-store\"\n\nexport function LogoutButton() {\n  const router = useRouter()\n  const logout = useAuthStore((state) => state.logout)\n\n  async function handleLogout() {\n    try {\n      const response = await fetch(\"/api/auth/logout\", {\n        method: \"POST\",\n      })\n\n      if (!response.ok) {\n        throw new Error(\"Logout failed\")\n      }\n\n      logout()\n      router.push(\"/login\")\n    } catch (error) {\n      console.error(\"Logout error:\", error)\n    }\n  }\n\n  return (\n    <button\n      onClick={handleLogout}\n      className=\"text-sm font-medium text-gray-700 hover:text-gray-800\"\n    >\n      Logout\n    </button>\n  )\n}\n\n",
                          "language": "typescript"
                        },
                        {
                          "name": "register-form.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport type React from \"react\"\n\nimport { useState } from \"react\"\nimport { useRouter } from \"next/navigation\"\nimport { createUserAction } from \"@/src/modules/auth/api/mutations/create-user\"\nimport { z } from \"zod\"\n\nconst registerSchema = z\n  .object({\n    email: z.string().email(\"Invalid email address\"),\n    password: z.string().min(8, \"Password must be at least 8 characters\"),\n    confirmPassword: z.string(),\n  })\n  .refine((data) => data.password === data.confirmPassword, {\n    message: \"Passwords don't match\",\n    path: [\"confirmPassword\"],\n  })\n\nexport function RegisterForm() {\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [confirmPassword, setConfirmPassword] = useState(\"\")\n  const [errors, setErrors] = useState<{ email?: string; password?: string; confirmPassword?: string }>({})\n  const [serverError, setServerError] = useState(\"\")\n  const [isLoading, setIsLoading] = useState(false)\n  const router = useRouter()\n\n  const validateForm = () => {\n    try {\n      registerSchema.parse({ email, password, confirmPassword })\n      setErrors({})\n      return true\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        setErrors(error.flatten().fieldErrors)\n      }\n      return false\n    }\n  }\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setServerError(\"\")\n\n    if (!validateForm()) return\n\n    try {\n      setIsLoading(true)\n      const result = await createUserAction({ email, password })\n\n      if (!result.success) {\n        setServerError(result.error || \"Registration failed\")\n        return\n      }\n\n      // Redirect based on user role\n      router.push(result.redirect)\n      router.refresh() // Refresh the page to update the session\n    } catch (error) {\n      setServerError(\"Registration failed. Please try again.\")\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\n      <div>\n        <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n          Email\n        </label>\n        <input\n          id=\"email\"\n          type=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\n          required\n          disabled={isLoading}\n        />\n        {errors.email && <p className=\"mt-1 text-sm text-red-600\">{errors.email}</p>}\n      </div>\n      <div>\n        <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n          Password\n        </label>\n        <input\n          id=\"password\"\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\n          required\n          disabled={isLoading}\n        />\n        {errors.password && <p className=\"mt-1 text-sm text-red-600\">{errors.password}</p>}\n      </div>\n      <div>\n        <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\n          Confirm Password\n        </label>\n        <input\n          id=\"confirmPassword\"\n          type=\"password\"\n          value={confirmPassword}\n          onChange={(e) => setConfirmPassword(e.target.value)}\n          className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\n          required\n          disabled={isLoading}\n        />\n        {errors.confirmPassword && <p className=\"mt-1 text-sm text-red-600\">{errors.confirmPassword}</p>}\n      </div>\n      {serverError && <p className=\"text-sm text-red-600\">{serverError}</p>}\n      <button\n        type=\"submit\"\n        className=\"w-full py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n        disabled={isLoading}\n      >\n        {isLoading ? \"Registering...\" : \"Register\"}\n      </button>\n      <a\n        href=\"/api/auth/github\"\n        className=\"block w-full text-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-gray-800 hover:bg-gray-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500\"\n      >\n        Register with GitHub\n      </a>\n    </form>\n  )\n}\n\n",
                          "language": "typescript"
                        }
                      ]
                    },
                    {
                      "name": "state",
                      "type": "directory",
                      "children": [
                        {
                          "name": "use-auth-store.ts",
                          "type": "file",
                          "content": "import { create, StateCreator } from \"zustand\"\n\ntype User = {\n  id: string\n  email: string\n  role: \"user\" | \"admin\"\n}\n\nexport type AuthStore = {\n  user: User | null\n  isAuthenticated: boolean\n  isLoading: boolean\n  setUser: (user: User | null) => void\n  setLoading: (loading: boolean) => void\n  logout: () => void\n}\n\nexport const useAuthStore = create<AuthStore>((set: StateCreator<AuthStore>['set']) => ({\n  user: null,\n  isAuthenticated: false,\n  isLoading: true,\n  setUser: (user: User | null) => set({ user, isAuthenticated: !!user, isLoading: false }),\n  setLoading: (loading: boolean) => set({ isLoading: loading }),\n  logout: () => set({ user: null, isAuthenticated: false }),\n})) ",
                          "language": "typescript"
                        }
                      ]
                    },
                    {
                      "name": "utils",
                      "type": "directory",
                      "children": [
                        {
                          "name": "jwt.ts",
                          "type": "file",
                          "content": "import { SignJWT, jwtVerify } from \"jose\"\nimport { env } from \"../../../server/env\"\n\nconst JWT_SECRET = new TextEncoder().encode(env.JWT_SECRET)\nconst JWT_EXPIRES_IN = \"7d\" // 7 days\n\nexport async function generateToken(payload: object): Promise<string> {\n  return new SignJWT(payload).setProtectedHeader({ alg: \"HS256\" }).setExpirationTime(JWT_EXPIRES_IN).sign(JWT_SECRET)\n}\n\nexport async function verifyToken(token: string): Promise<any> {\n  try {\n    const { payload } = await jwtVerify(token, JWT_SECRET)\n    return payload\n  } catch (error) {\n    return null\n  }\n}\n\n",
                          "language": "typescript"
                        }
                      ]
                    },
                    {
                      "name": "views",
                      "type": "directory",
                      "children": [
                        {
                          "name": "login-view.tsx",
                          "type": "file",
                          "content": "import { LoginForm } from \"../components/login-form\"\nimport { GitHubButton } from \"../components/github-button\"\n\nexport function LoginView() {\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\n      <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\n        <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n          Sign in to your account\n        </h2>\n        <p className=\"mt-2 text-center text-sm text-gray-600\">\n          Or{\" \"}\n          <a href=\"/register\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\n            create a new account\n          </a>\n        </p>\n      </div>\n\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n          <div className=\"space-y-6\">\n            <LoginForm />\n            <div className=\"relative\">\n              <div className=\"absolute inset-0 flex items-center\">\n                <div className=\"w-full border-t border-gray-300\" />\n              </div>\n              <div className=\"relative flex justify-center text-sm\">\n                <span className=\"px-2 bg-white text-gray-500\">Or continue with</span>\n              </div>\n            </div>\n            <GitHubButton />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n",
                          "language": "typescript"
                        },
                        {
                          "name": "register-view.tsx",
                          "type": "file",
                          "content": "import { RegisterForm } from \"../components/register-form\"\nimport { GitHubButton } from \"../components/github-button\"\n\nexport function RegisterView() {\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\n      <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\n        <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n          Create your account\n        </h2>\n        <p className=\"mt-2 text-center text-sm text-gray-600\">\n          Already have an account?{\" \"}\n          <a href=\"/login\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\n            Sign in\n          </a>\n        </p>\n      </div>\n\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n          <div className=\"space-y-6\">\n            <RegisterForm />\n            <div className=\"relative\">\n              <div className=\"absolute inset-0 flex items-center\">\n                <div className=\"w-full border-t border-gray-300\" />\n              </div>\n              <div className=\"relative flex justify-center text-sm\">\n                <span className=\"px-2 bg-white text-gray-500\">Or continue with</span>\n              </div>\n            </div>\n            <GitHubButton />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n",
                          "language": "typescript"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "dashboard",
                  "type": "directory",
                  "children": [
                    {
                      "name": "views",
                      "type": "directory",
                      "children": [
                        {
                          "name": "admin-dashboard-view.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport { useState, useEffect } from \"react\"\n\ninterface User {\n  id: string\n  email: string\n  role: string\n}\n\nexport function AdminDashboardView() {\n  const [users, setUsers] = useState<User[]>([])\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const response = await fetch(\"/api/users\")\n      const data = await response.json()\n      setUsers(data)\n    }\n\n    fetchUsers()\n  }, [])\n\n  return (\n    <div className=\"min-h-screen bg-gray-100\">\n      <main>\n        <div className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n          <div className=\"px-4 py-6 sm:px-0\">\n            <h1 className=\"text-3xl font-bold text-gray-900 mb-4\">Admin Dashboard</h1>\n            <h2 className=\"text-2xl font-semibold mb-4\">Registered Users</h2>\n            <div className=\"bg-white shadow overflow-hidden sm:rounded-lg\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      ID\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Email\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Role\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {users.map((user) => (\n                    <tr key={user.id}>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{user.id}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{user.email}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{user.role}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  )\n}\n\n",
                          "language": "typescript"
                        },
                        {
                          "name": "dashboard-view.tsx",
                          "type": "file",
                          "content": "export function DashboardView() {\n  return (\n    <div className=\"min-h-screen bg-gray-100\">\n      <main>\n        <div className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n          <div className=\"px-4 py-6 sm:px-0\">\n            <h1 className=\"text-3xl font-bold text-gray-900 mb-4\">Dashboard</h1>\n            <div className=\"border-4 border-dashed border-gray-200 rounded-lg h-96 flex items-center justify-center\">\n              <p className=\"text-gray-500 text-xl\">Welcome to your dashboard! We're glad to have you here.</p>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  )\n}\n\n",
                          "language": "typescript"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "server",
              "type": "directory",
              "children": [
                {
                  "name": "db",
                  "type": "directory",
                  "children": [
                    {
                      "name": "index.ts",
                      "type": "file",
                      "content": "import { drizzle } from \"drizzle-orm/better-sqlite3\"\nimport Database from \"better-sqlite3\"\nimport { join } from \"path\"\n\n// Ensure this only runs on the server\nif (typeof window !== \"undefined\") {\n  throw new Error(\"Database can only be accessed on the server\")\n}\n\ndeclare global {\n  var sqlite: Database.Database | undefined\n  var db: ReturnType<typeof drizzle> | undefined\n}\n\nconst dbPath = join(process.cwd(), \"local.db\")\n\nlet db: ReturnType<typeof drizzle>\n\n// In production, we want to reuse connections\nif (process.env.NODE_ENV === \"production\") {\n  if (!global.sqlite) {\n    global.sqlite = new Database(dbPath)\n    global.db = drizzle(global.sqlite)\n  }\n  db = global.db!\n} else {\n  // In development, create a new connection\n  const sqlite = new Database(dbPath)\n  db = drizzle(sqlite)\n}\n\nexport { db }\n\n",
                      "language": "typescript"
                    },
                    {
                      "name": "schema",
                      "type": "directory",
                      "children": [
                        {
                          "name": "index.ts",
                          "type": "file",
                          "content": "import type { InferModel } from 'drizzle-orm'\nimport { sql } from 'drizzle-orm'\nimport { sqliteTable, text, integer } from 'drizzle-orm/sqlite-core'\n\n// Users and Auth\nexport const users = sqliteTable(\"users\", {\n  id: text(\"id\").primaryKey(),\n  email: text(\"email\").notNull().unique(),\n  passwordHash: text(\"password_hash\"),\n  role: text(\"role\").notNull().default(\"user\"),\n  createdAt: integer(\"created_at\", { mode: \"timestamp\" }).notNull().default(sql`CURRENT_TIMESTAMP`),\n  updatedAt: integer(\"updated_at\", { mode: \"timestamp\" }).notNull().default(sql`CURRENT_TIMESTAMP`),\n})\n\nexport const sessions = sqliteTable(\"sessions\", {\n  id: text(\"id\").primaryKey(),\n  userId: text(\"user_id\")\n    .notNull()\n    .references(() => users.id),\n  expiresAt: integer(\"expires_at\", { mode: \"timestamp\" }).notNull(),\n  createdAt: integer(\"created_at\", { mode: \"timestamp\" }).notNull().default(sql`CURRENT_TIMESTAMP`),\n})\n\n// OAuth\nexport const oauthConnections = sqliteTable(\"oauth_connections\", {\n  id: text(\"id\").primaryKey(),\n  userId: text(\"user_id\")\n    .notNull()\n    .references(() => users.id),\n  provider: text(\"provider\").notNull(),\n  providerUserId: text(\"provider_user_id\").notNull(),\n  createdAt: integer(\"created_at\", { mode: \"timestamp\" }).notNull().default(sql`CURRENT_TIMESTAMP`),\n  updatedAt: integer(\"updated_at\", { mode: \"timestamp\" }).notNull().default(sql`CURRENT_TIMESTAMP`),\n})\n\n// User Profiles\nexport const userProfiles = sqliteTable(\"user_profiles\", {\n  id: text(\"id\").primaryKey(),\n  userId: text(\"user_id\")\n    .notNull()\n    .references(() => users.id),\n  fullName: text(\"full_name\"),\n  bio: text(\"bio\"),\n  avatarUrl: text(\"avatar_url\"),\n  createdAt: integer(\"created_at\", { mode: \"timestamp\" }).notNull().default(sql`CURRENT_TIMESTAMP`),\n  updatedAt: integer(\"updated_at\", { mode: \"timestamp\" }).notNull().default(sql`CURRENT_TIMESTAMP`),\n})\n\n// Export types\nexport type { InferModel } from 'drizzle-orm'\n\n// Define and export model types\nexport type User = InferModel<typeof users>\nexport type Session = InferModel<typeof sessions>\nexport type OAuthConnection = InferModel<typeof oauthConnections>\nexport type UserProfile = InferModel<typeof userProfiles>\n\n// Define and export insert types\nexport type NewUser = InferModel<typeof users, \"insert\">\nexport type NewSession = InferModel<typeof sessions, \"insert\">\nexport type NewOAuthConnection = InferModel<typeof oauthConnections, \"insert\">\nexport type NewUserProfile = InferModel<typeof userProfiles, \"insert\">\n\n",
                          "language": "typescript"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "env.ts",
                  "type": "file",
                  "content": "import { createEnv } from \"@t3-oss/env-nextjs\"\nimport { z } from \"zod\"\n\nexport const env = createEnv({\n  server: {\n    DATABASE_URL: z.string().min(1),\n    JWT_SECRET: z.string().min(32),\n    GITHUB_CLIENT_ID: z.string().min(1),\n    GITHUB_CLIENT_SECRET: z.string().min(1),\n    ADMIN_EMAILS: z.string(),\n    NODE_ENV: z.enum([\"development\", \"test\", \"production\"]),\n  },\n  client: {\n    // Add client-side environment variables here if needed\n  },\n  runtimeEnv: {\n    DATABASE_URL: process.env.DATABASE_URL,\n    JWT_SECRET: process.env.JWT_SECRET,\n    GITHUB_CLIENT_ID: process.env.GITHUB_CLIENT_ID,\n    GITHUB_CLIENT_SECRET: process.env.GITHUB_CLIENT_SECRET,\n    ADMIN_EMAILS: process.env.ADMIN_EMAILS,\n    NODE_ENV: process.env.NODE_ENV,\n  },\n})\n\n",
                  "language": "typescript"
                }
              ]
            },
            {
              "name": "shared",
              "type": "directory",
              "children": [
                {
                  "name": "components",
                  "type": "directory",
                  "children": [
                    {
                      "name": "theme-provider.tsx",
                      "type": "file",
                      "content": "'use client'\n\nimport * as React from 'react'\nimport {\n  ThemeProvider as NextThemesProvider,\n  type ThemeProviderProps,\n} from 'next-themes'\n\nexport function ThemeProvider({ children, ...props }: ThemeProviderProps) {\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>\n}\n",
                      "language": "typescript"
                    },
                    {
                      "name": "ui",
                      "type": "directory",
                      "children": [
                        {
                          "name": "accordion.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n",
                          "language": "typescript"
                        },
                        {
                          "name": "alert-dialog.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/src/shared/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n",
                          "language": "typescript"
                        },
                        {
                          "name": "alert.tsx",
                          "type": "file",
                          "content": "import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n",
                          "language": "typescript"
                        },
                        {
                          "name": "aspect-ratio.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n",
                          "language": "typescript"
                        },
                        {
                          "name": "avatar.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n",
                          "language": "typescript"
                        },
                        {
                          "name": "badge.tsx",
                          "type": "file",
                          "content": "import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n",
                          "language": "typescript"
                        },
                        {
                          "name": "breadcrumb.tsx",
                          "type": "file",
                          "content": "import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n",
                          "language": "typescript"
                        },
                        {
                          "name": "button.tsx",
                          "type": "file",
                          "content": "import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n",
                          "language": "typescript"
                        },
                        {
                          "name": "calendar.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/src/shared/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ ...props }) => <ChevronLeft className=\"h-4 w-4\" />,\n        IconRight: ({ ...props }) => <ChevronRight className=\"h-4 w-4\" />,\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n",
                          "language": "typescript"
                        },
                        {
                          "name": "card.tsx",
                          "type": "file",
                          "content": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n",
                          "language": "typescript"
                        },
                        {
                          "name": "carousel.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/src/shared/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n",
                          "language": "typescript"
                        },
                        {
                          "name": "chart.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([_, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n",
                          "language": "typescript"
                        },
                        {
                          "name": "checkbox.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n",
                          "language": "typescript"
                        },
                        {
                          "name": "collapsible.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n",
                          "language": "typescript"
                        },
                        {
                          "name": "command.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/src/shared/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n",
                          "language": "typescript"
                        },
                        {
                          "name": "context-menu.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n",
                          "language": "typescript"
                        },
                        {
                          "name": "dialog.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n",
                          "language": "typescript"
                        },
                        {
                          "name": "drawer.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n",
                          "language": "typescript"
                        },
                        {
                          "name": "dropdown-menu.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n",
                          "language": "typescript"
                        },
                        {
                          "name": "form.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  ControllerProps,\n  FieldPath,\n  FieldValues,\n  FormProvider,\n  useFormContext,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/src/shared/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message) : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n",
                          "language": "typescript"
                        },
                        {
                          "name": "hover-card.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n",
                          "language": "typescript"
                        },
                        {
                          "name": "input-otp.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n",
                          "language": "typescript"
                        },
                        {
                          "name": "input.tsx",
                          "type": "file",
                          "content": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n",
                          "language": "typescript"
                        },
                        {
                          "name": "label.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n",
                          "language": "typescript"
                        },
                        {
                          "name": "menubar.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst MenubarMenu = MenubarPrimitive.Menu\n\nconst MenubarGroup = MenubarPrimitive.Group\n\nconst MenubarPortal = MenubarPrimitive.Portal\n\nconst MenubarSub = MenubarPrimitive.Sub\n\nconst MenubarRadioGroup = MenubarPrimitive.RadioGroup\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n",
                          "language": "typescript"
                        },
                        {
                          "name": "navigation-menu.tsx",
                          "type": "file",
                          "content": "import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-accent/50 data-[state=open]:bg-accent/50\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n",
                          "language": "typescript"
                        },
                        {
                          "name": "pagination.tsx",
                          "type": "file",
                          "content": "import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/src/shared/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n",
                          "language": "typescript"
                        },
                        {
                          "name": "popover.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n",
                          "language": "typescript"
                        },
                        {
                          "name": "progress.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n",
                          "language": "typescript"
                        },
                        {
                          "name": "radio-group.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n",
                          "language": "typescript"
                        },
                        {
                          "name": "resizable.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n",
                          "language": "typescript"
                        },
                        {
                          "name": "scroll-area.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n",
                          "language": "typescript"
                        },
                        {
                          "name": "select.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n",
                          "language": "typescript"
                        },
                        {
                          "name": "separator.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n",
                          "language": "typescript"
                        },
                        {
                          "name": "sheet.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n",
                          "language": "typescript"
                        },
                        {
                          "name": "sidebar.tsx",
                          "type": "file",
                          "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { VariantProps, cva } from \"class-variance-authority\";\nimport { PanelLeft } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"@/src/shared/components/ui/button\";\nimport { Input } from \"@/src/shared/components/ui/input\";\nimport { Separator } from \"@/src/shared/components/ui/separator\";\nimport { Sheet, SheetContent } from \"@/src/shared/components/ui/sheet\";\nimport { Skeleton } from \"@/src/shared/components/ui/skeleton\";\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/src/shared/components/ui/tooltip\";\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar:state\";\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7;\nconst SIDEBAR_WIDTH = \"16rem\";\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\";\nconst SIDEBAR_WIDTH_ICON = \"3rem\";\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\";\n\nconst MOBILE_BREAKPOINT = 768;\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(\n    undefined\n  );\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`);\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT);\n    };\n    mql.addEventListener(\"change\", onChange);\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT);\n    return () => mql.removeEventListener(\"change\", onChange);\n  }, []);\n\n  return !!isMobile;\n}\n\ntype SidebarContext = {\n  state: \"expanded\" | \"collapsed\";\n  open: boolean;\n  setOpen: (open: boolean) => void;\n  openMobile: boolean;\n  setOpenMobile: (open: boolean) => void;\n  isMobile: boolean;\n  toggleSidebar: () => void;\n};\n\nconst SidebarContext = React.createContext<SidebarContext | null>(null);\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext);\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\");\n  }\n\n  return context;\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean;\n    open?: boolean;\n    onOpenChange?: (open: boolean) => void;\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile();\n    const [openMobile, setOpenMobile] = React.useState(false);\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen);\n    const open = openProp ?? _open;\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value;\n        if (setOpenProp) {\n          setOpenProp(openState);\n        } else {\n          _setOpen(openState);\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`;\n      },\n      [setOpenProp, open]\n    );\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open);\n    }, [isMobile, setOpen, setOpenMobile]);\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault();\n          toggleSidebar();\n        }\n      };\n\n      window.addEventListener(\"keydown\", handleKeyDown);\n      return () => window.removeEventListener(\"keydown\", handleKeyDown);\n    }, [toggleSidebar]);\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\";\n\n    const contextValue = React.useMemo<SidebarContext>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    );\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={{\n              \"--sidebar-width\": SIDEBAR_WIDTH,\n              \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n              ...style,\n            } as React.CSSProperties}\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    );\n  }\n);\nSidebarProvider.displayName = \"SidebarProvider\";\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\";\n    variant?: \"sidebar\" | \"floating\" | \"inset\";\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\";\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar();\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      );\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={{\n              \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n            } as React.CSSProperties}\n            side={side}\n          >\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      );\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden md:block text-sidebar-foreground\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"duration-200 relative h-svh w-[--sidebar-width] bg-transparent transition-[width] ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"duration-200 fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\nSidebar.displayName = \"Sidebar\";\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar();\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event);\n        toggleSidebar();\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  );\n});\nSidebarTrigger.displayName = \"SidebarTrigger\";\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar();\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  );\n});\nSidebarRail.displayName = \"SidebarRail\";\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex min-h-svh flex-1 flex-col bg-background\",\n        \"peer-data-[variant=inset]:min-h-[calc(100svh-theme(spacing.4))] md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  );\n});\nSidebarInset.displayName = \"SidebarInset\";\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  );\n});\nSidebarInput.displayName = \"SidebarInput\";\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  );\n});\nSidebarHeader.displayName = \"SidebarHeader\";\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  );\n});\nSidebarFooter.displayName = \"SidebarFooter\";\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  );\n});\nSidebarSeparator.displayName = \"SidebarSeparator\";\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  );\n});\nSidebarContent.displayName = \"SidebarContent\";\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  );\n});\nSidebarGroup.displayName = \"SidebarGroup\";\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\";\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"duration-200 flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opa] ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  );\n});\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\";\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\";\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  );\n});\nSidebarGroupAction.displayName = \"SidebarGroupAction\";\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n));\nSidebarGroupContent.displayName = \"SidebarGroupContent\";\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n));\nSidebarMenu.displayName = \"SidebarMenu\";\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n));\nSidebarMenuItem.displayName = \"SidebarMenuItem\";\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n);\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean;\n    isActive?: boolean;\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>;\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\";\n    const { isMobile, state } = useSidebar();\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    );\n\n    if (!tooltip) {\n      return button;\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      };\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    );\n  }\n);\nSidebarMenuButton.displayName = \"SidebarMenuButton\";\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean;\n    showOnHover?: boolean;\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\";\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  );\n});\nSidebarMenuAction.displayName = \"SidebarMenuAction\";\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground select-none pointer-events-none\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n));\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\";\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean;\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`;\n  }, []);\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"rounded-md h-8 flex gap-2 px-2 items-center\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 flex-1 max-w-[--skeleton-width]\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={{\n          \"--skeleton-width\": width,\n        } as React.CSSProperties}\n      />\n    </div>\n  );\n});\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\";\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n));\nSidebarMenuSub.displayName = \"SidebarMenuSub\";\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />);\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\";\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean;\n    size?: \"sm\" | \"md\";\n    isActive?: boolean;\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\";\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  );\n});\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\";\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n};\n",
                          "language": "typescript"
                        },
                        {
                          "name": "skeleton.tsx",
                          "type": "file",
                          "content": "import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n",
                          "language": "typescript"
                        },
                        {
                          "name": "slider.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n",
                          "language": "typescript"
                        },
                        {
                          "name": "sonner.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport { useTheme } from \"next-themes\"\nimport { Toaster as Sonner } from \"sonner\"\n\ntype ToasterProps = React.ComponentProps<typeof Sonner>\n\nconst Toaster = ({ ...props }: ToasterProps) => {\n  const { theme = \"system\" } = useTheme()\n\n  return (\n    <Sonner\n      theme={theme as ToasterProps[\"theme\"]}\n      className=\"toaster group\"\n      toastOptions={{\n        classNames: {\n          toast:\n            \"group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg\",\n          description: \"group-[.toast]:text-muted-foreground\",\n          actionButton:\n            \"group-[.toast]:bg-primary group-[.toast]:text-primary-foreground\",\n          cancelButton:\n            \"group-[.toast]:bg-muted group-[.toast]:text-muted-foreground\",\n        },\n      }}\n      {...props}\n    />\n  )\n}\n\nexport { Toaster }\n",
                          "language": "typescript"
                        },
                        {
                          "name": "switch.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n",
                          "language": "typescript"
                        },
                        {
                          "name": "table.tsx",
                          "type": "file",
                          "content": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n",
                          "language": "typescript"
                        },
                        {
                          "name": "tabs.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n",
                          "language": "typescript"
                        },
                        {
                          "name": "textarea.tsx",
                          "type": "file",
                          "content": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n",
                          "language": "typescript"
                        },
                        {
                          "name": "toast.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n",
                          "language": "typescript"
                        },
                        {
                          "name": "toaster.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/src/shared/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n",
                          "language": "typescript"
                        },
                        {
                          "name": "toggle-group.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/src/shared/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n",
                          "language": "typescript"
                        },
                        {
                          "name": "toggle.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n",
                          "language": "typescript"
                        },
                        {
                          "name": "tooltip.tsx",
                          "type": "file",
                          "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n",
                          "language": "typescript"
                        },
                        {
                          "name": "use-mobile.tsx",
                          "type": "file",
                          "content": "import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n",
                          "language": "typescript"
                        },
                        {
                          "name": "use-toast.ts",
                          "type": "file",
                          "content": "\"use client\"\n\n// Inspired by react-hot-toast library\nimport * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/src/shared/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n",
                          "language": "typescript"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "styles",
              "type": "directory",
              "children": [
                {
                  "name": "globals.css",
                  "type": "file",
                  "content": "@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\nbody {\n  font-family: Arial, Helvetica, sans-serif;\n}\n\n@layer utilities {\n  .text-balance {\n    text-wrap: balance;\n  }\n}\n\n@layer base {\n  :root {\n    --background: 0 0% 100%;\n    --foreground: 0 0% 3.9%;\n    --card: 0 0% 100%;\n    --card-foreground: 0 0% 3.9%;\n    --popover: 0 0% 100%;\n    --popover-foreground: 0 0% 3.9%;\n    --primary: 0 0% 9%;\n    --primary-foreground: 0 0% 98%;\n    --secondary: 0 0% 96.1%;\n    --secondary-foreground: 0 0% 9%;\n    --muted: 0 0% 96.1%;\n    --muted-foreground: 0 0% 45.1%;\n    --accent: 0 0% 96.1%;\n    --accent-foreground: 0 0% 9%;\n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 0 0% 98%;\n    --border: 0 0% 89.8%;\n    --input: 0 0% 89.8%;\n    --ring: 0 0% 3.9%;\n    --chart-1: 12 76% 61%;\n    --chart-2: 173 58% 39%;\n    --chart-3: 197 37% 24%;\n    --chart-4: 43 74% 66%;\n    --chart-5: 27 87% 67%;\n    --radius: 0.5rem;\n    --sidebar-background: 0 0% 98%;\n    --sidebar-foreground: 240 5.3% 26.1%;\n    --sidebar-primary: 240 5.9% 10%;\n    --sidebar-primary-foreground: 0 0% 98%;\n    --sidebar-accent: 240 4.8% 95.9%;\n    --sidebar-accent-foreground: 240 5.9% 10%;\n    --sidebar-border: 220 13% 91%;\n    --sidebar-ring: 217.2 91.2% 59.8%;\n  }\n  .dark {\n    --background: 0 0% 3.9%;\n    --foreground: 0 0% 98%;\n    --card: 0 0% 3.9%;\n    --card-foreground: 0 0% 98%;\n    --popover: 0 0% 3.9%;\n    --popover-foreground: 0 0% 98%;\n    --primary: 0 0% 98%;\n    --primary-foreground: 0 0% 9%;\n    --secondary: 0 0% 14.9%;\n    --secondary-foreground: 0 0% 98%;\n    --muted: 0 0% 14.9%;\n    --muted-foreground: 0 0% 63.9%;\n    --accent: 0 0% 14.9%;\n    --accent-foreground: 0 0% 98%;\n    --destructive: 0 62.8% 30.6%;\n    --destructive-foreground: 0 0% 98%;\n    --border: 0 0% 14.9%;\n    --input: 0 0% 14.9%;\n    --ring: 0 0% 83.1%;\n    --chart-1: 220 70% 50%;\n    --chart-2: 160 60% 45%;\n    --chart-3: 30 80% 55%;\n    --chart-4: 280 65% 60%;\n    --chart-5: 340 75% 55%;\n    --sidebar-background: 240 5.9% 10%;\n    --sidebar-foreground: 240 4.8% 95.9%;\n    --sidebar-primary: 224.3 76.3% 48%;\n    --sidebar-primary-foreground: 0 0% 100%;\n    --sidebar-accent: 240 3.7% 15.9%;\n    --sidebar-accent-foreground: 240 4.8% 95.9%;\n    --sidebar-border: 240 3.7% 15.9%;\n    --sidebar-ring: 217.2 91.2% 59.8%;\n  }\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n  body {\n    @apply bg-background text-foreground;\n  }\n}\n",
                  "language": "css"
                }
              ]
            },
            {
              "name": "views",
              "type": "directory",
              "children": [
                {
                  "name": "dashboard",
                  "type": "directory",
                  "children": [
                    {
                      "name": "index.tsx",
                      "type": "file",
                      "content": "\"use client\"\n\nimport { useAuthStore, type AuthStore } from \"@/src/modules/auth/state/use-auth-store\"\n\nexport function DashboardView() {\n  const user = useAuthStore((state: AuthStore) => state.user)\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <h1 className=\"text-2xl font-bold mb-4\">Dashboard</h1>\n      <div className=\"bg-white rounded-lg shadow p-6\">\n        <h2 className=\"text-lg font-semibold mb-2\">Welcome, {user?.email}</h2>\n        <p className=\"text-gray-600\">\n          You are logged in as a {user?.role} user.\n        </p>\n      </div>\n    </div>\n  )\n} ",
                      "language": "typescript"
                    }
                  ]
                },
                {
                  "name": "users",
                  "type": "directory",
                  "children": [
                    {
                      "name": "users-view.tsx",
                      "type": "file",
                      "content": "\"use client\"\n\nimport { use } from \"react\"\n\nasync function getUsers() {\n  const res = await fetch(\"/api/users\", { cache: \"no-store\" })\n  if (!res.ok) throw new Error(\"Failed to fetch users\")\n  return res.json()\n}\n\ntype User = {\n  id: string\n  email: string\n  role: string\n}\n\ntype UsersViewProps = {\n  users: User[]\n}\n\nexport function UsersView({ users }: UsersViewProps) {\n  return <div>{JSON.stringify(users, null, 2)}</div>\n} ",
                      "language": "typescript"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "tailwind.config.ts",
          "type": "file",
          "content": "import type { Config } from \"tailwindcss\";\n\nconst config: Config = {\n    darkMode: [\"class\"],\n    content: [\n    \"./pages/**/*.{js,ts,jsx,tsx,mdx}\",\n    \"./components/**/*.{js,ts,jsx,tsx,mdx}\",\n    \"./app/**/*.{js,ts,jsx,tsx,mdx}\",\n    \"*.{js,ts,jsx,tsx,mdx}\"\n  ],\n  theme: {\n  \textend: {\n  \t\tcolors: {\n  \t\t\tbackground: 'hsl(var(--background))',\n  \t\t\tforeground: 'hsl(var(--foreground))',\n  \t\t\tcard: {\n  \t\t\t\tDEFAULT: 'hsl(var(--card))',\n  \t\t\t\tforeground: 'hsl(var(--card-foreground))'\n  \t\t\t},\n  \t\t\tpopover: {\n  \t\t\t\tDEFAULT: 'hsl(var(--popover))',\n  \t\t\t\tforeground: 'hsl(var(--popover-foreground))'\n  \t\t\t},\n  \t\t\tprimary: {\n  \t\t\t\tDEFAULT: 'hsl(var(--primary))',\n  \t\t\t\tforeground: 'hsl(var(--primary-foreground))'\n  \t\t\t},\n  \t\t\tsecondary: {\n  \t\t\t\tDEFAULT: 'hsl(var(--secondary))',\n  \t\t\t\tforeground: 'hsl(var(--secondary-foreground))'\n  \t\t\t},\n  \t\t\tmuted: {\n  \t\t\t\tDEFAULT: 'hsl(var(--muted))',\n  \t\t\t\tforeground: 'hsl(var(--muted-foreground))'\n  \t\t\t},\n  \t\t\taccent: {\n  \t\t\t\tDEFAULT: 'hsl(var(--accent))',\n  \t\t\t\tforeground: 'hsl(var(--accent-foreground))'\n  \t\t\t},\n  \t\t\tdestructive: {\n  \t\t\t\tDEFAULT: 'hsl(var(--destructive))',\n  \t\t\t\tforeground: 'hsl(var(--destructive-foreground))'\n  \t\t\t},\n  \t\t\tborder: 'hsl(var(--border))',\n  \t\t\tinput: 'hsl(var(--input))',\n  \t\t\tring: 'hsl(var(--ring))',\n  \t\t\tchart: {\n  \t\t\t\t'1': 'hsl(var(--chart-1))',\n  \t\t\t\t'2': 'hsl(var(--chart-2))',\n  \t\t\t\t'3': 'hsl(var(--chart-3))',\n  \t\t\t\t'4': 'hsl(var(--chart-4))',\n  \t\t\t\t'5': 'hsl(var(--chart-5))'\n  \t\t\t},\n  \t\t\tsidebar: {\n  \t\t\t\tDEFAULT: 'hsl(var(--sidebar-background))',\n  \t\t\t\tforeground: 'hsl(var(--sidebar-foreground))',\n  \t\t\t\tprimary: 'hsl(var(--sidebar-primary))',\n  \t\t\t\t'primary-foreground': 'hsl(var(--sidebar-primary-foreground))',\n  \t\t\t\taccent: 'hsl(var(--sidebar-accent))',\n  \t\t\t\t'accent-foreground': 'hsl(var(--sidebar-accent-foreground))',\n  \t\t\t\tborder: 'hsl(var(--sidebar-border))',\n  \t\t\t\tring: 'hsl(var(--sidebar-ring))'\n  \t\t\t}\n  \t\t},\n  \t\tborderRadius: {\n  \t\t\tlg: 'var(--radius)',\n  \t\t\tmd: 'calc(var(--radius) - 2px)',\n  \t\t\tsm: 'calc(var(--radius) - 4px)'\n  \t\t},\n  \t\tkeyframes: {\n  \t\t\t'accordion-down': {\n  \t\t\t\tfrom: {\n  \t\t\t\t\theight: '0'\n  \t\t\t\t},\n  \t\t\t\tto: {\n  \t\t\t\t\theight: 'var(--radix-accordion-content-height)'\n  \t\t\t\t}\n  \t\t\t},\n  \t\t\t'accordion-up': {\n  \t\t\t\tfrom: {\n  \t\t\t\t\theight: 'var(--radix-accordion-content-height)'\n  \t\t\t\t},\n  \t\t\t\tto: {\n  \t\t\t\t\theight: '0'\n  \t\t\t\t}\n  \t\t\t}\n  \t\t},\n  \t\tanimation: {\n  \t\t\t'accordion-down': 'accordion-down 0.2s ease-out',\n  \t\t\t'accordion-up': 'accordion-up 0.2s ease-out'\n  \t\t}\n  \t}\n  },\n  plugins: [require(\"tailwindcss-animate\")],\n};\nexport default config;\n",
          "language": "typescript"
        },
        {
          "name": "tsconfig.json",
          "type": "file",
          "content": "{\\n  \\\"compilerOptions\\\": {\\n    \\\"lib\\\": [\\\"dom\\\", \\\"dom.iterable\\\", \\\"esnext\\\"],\\n    \\\"allowJs\\\": true,\\n    \\\"target\\\": \\\"ES6\\\",\\n    \\\"skipLibCheck\\\": true,\\n    \\\"strict\\\": true,\\n    \\\"noEmit\\\": true,\\n    \\\"esModuleInterop\\\": true,\\n    \\\"module\\\": \\\"esnext\\\",\\n    \\\"moduleResolution\\\": \\\"bundler\\\",\\n    \\\"resolveJsonModule\\\": true,\\n    \\\"isolatedModules\\\": true,\\n    \\\"jsx\\\": \\\"preserve\\\",\\n    \\\"incremental\\\": true,\\n    \\\"plugins\\\": [\\n      {\\n        \\\"name\\\": \\\"next\\\"\\n      }\\n    ],\\n    \\\"paths\\\": {\\n      \\\"@/*\\\": [\\\"./*\\\"]\\n    }\\n  },\\n  \\\"include\\\": [\\\"next-env.d.ts\\\", \\\"**/*.ts\\\", \\\"**/*.tsx\\\", \\\".next/types/**/*.ts\\\"],\\n  \\\"exclude\\\": [\\\"node_modules\\\"]\\n}\\n",
          "language": "json"
        }
      ]
    }
  ]
}